<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Add Databases to an Availability Group</title>
    <url>/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/</url>
    <content><![CDATA[<h1 id="add-databases-to-an-availability-group">Add Databases to an
Availability Group</h1>
<p>In the primary replica, restore the database.</p>
<figure>
<img
src="/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/image-20220608094437985.png"
alt="image-20220608094437985" />
<figcaption aria-hidden="true">image-20220608094437985</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/image-20220608095913496.png"
alt="image-20220608095913496" />
<figcaption aria-hidden="true">image-20220608095913496</figcaption>
</figure>
<p>Change the <code>Recovery Model</code> to <strong>Full</strong>.</p>
<figure>
<img
src="/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/image-20220608100229708.png"
alt="image-20220608100229708" />
<figcaption aria-hidden="true">image-20220608100229708</figcaption>
</figure>
<p>Run the script to make full backups and tlog backups.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--Full Backups</span><br>BACKUP DATABASE [WideWorldImporters] <span class="hljs-keyword">TO</span>  DISK <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL15.SQL1\MSSQL\Backup\WideWorldImporters_FullBackup_20220608.bak&#x27;</span> <br><span class="hljs-keyword">WITH</span> NOFORMAT, NOINIT,  <br>NAME <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;WideWorldImporters-Full Database Backup&#x27;</span>, <br><span class="hljs-keyword">SKIP</span>, NOREWIND, NOUNLOAD, COMPRESSION,  STATS <span class="hljs-operator">=</span> <span class="hljs-number">10</span>, CHECKSUM<br>GO<br><br><span class="hljs-comment">--Tlog Backups</span><br>BACKUP LOG [WideWorldImporters] <span class="hljs-keyword">TO</span>  DISK <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL15.SQL1\MSSQL\Backup\WideWorldImporters_TlogBackup_20220608.trn&#x27;</span> <br><span class="hljs-keyword">WITH</span> NOFORMAT, NOINIT,  <br>NAME <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;WideWorldImporters-Full Database Backup&#x27;</span>, <br><span class="hljs-keyword">SKIP</span>, NOREWIND, NOUNLOAD, COMPRESSION,  STATS <span class="hljs-operator">=</span> <span class="hljs-number">10</span>, CHECKSUM<br>GO<br></code></pre></td></tr></table></figure>
<p>In the <strong>Properties</strong> page of the AG, add the name of
the database, then click on <code>OK</code>, if there is no warning,
then we successfully added an additional database to the AG.</p>
<figure>
<img
src="/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/image-20220608100051919.png"
alt="image-20220608100051919" />
<figcaption aria-hidden="true">image-20220608100051919</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Add%20Database%20to%20an%20Availability%20Group/image-20220608100634388.png"
alt="image-20220608100634388" />
<figcaption aria-hidden="true">image-20220608100634388</figcaption>
</figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Build a Failover Cluster on VMAS</title>
    <url>/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/</url>
    <content><![CDATA[<h1 id="build-a-failover-cluster-on-vmas">Build a failover cluster on
VMAS</h1>
<h2 id="preparation">Preparation</h2>
<h3 id="configure-domain-controller">Configure Domain Controller</h3>
<p>In the <strong>Server Manager</strong> of the server that you want to
use as a Domain Controller, click on <strong>Add roles and
features</strong>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602103151680.png"
alt="image-20220602103151680" />
<figcaption aria-hidden="true">image-20220602103151680</figcaption>
</figure>
<p>Check <code>Active Directory Domain Services</code> and
<code>DNS Server</code> tabs and continue the installation.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602102333211.png"
alt="image-20220602102333211" />
<figcaption aria-hidden="true">image-20220602102333211</figcaption>
</figure>
<h3 id="configure-domain-settings">Configure Domain Settings</h3>
<p>For the node servers, <strong>Control Panel --&gt; System and
Security --&gt; System --&gt; Change settings --&gt; Change</strong>,
set the <code>Domain</code> as you created. You may need to reboot the
machine to make effects.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220607180631031.png"
alt="image-20220607180631031" />
<figcaption aria-hidden="true">image-20220607180631031</figcaption>
</figure>
<h3 id="configure-dns-settings">Configure DNS Settings</h3>
<p>For the node servers, change their DNS settings to the same as the
DC, <strong>Control Panel --&gt; Network and Internet --&gt; Network
Connections --&gt; Properties --&gt; Internet Protocol Version 4
(TCP/IPv4)</strong>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220607181311498.png"
alt="image-20220607181311498" />
<figcaption aria-hidden="true">image-20220607181311498</figcaption>
</figure>
<h2 id="add-the-failover-clustering-feature-to-nodes">Add the Failover
Clustering Feature to Nodes</h2>
<p>This should be done for all the servers that you want to join your
WSFC.</p>
<p>In the <strong>Server Manager</strong> of node servers, click
<strong>Add roles and features</strong>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602103139638.png"
alt="image-20220602103139638" />
<figcaption aria-hidden="true">image-20220602103139638</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602102912334.png"
alt="image-20220602102912334" />
<figcaption aria-hidden="true">image-20220602102912334</figcaption>
</figure>
<p>Check <code>Failover Clustering</code>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602104348148.png"
alt="image-20220602104348148" />
<figcaption aria-hidden="true">image-20220602104348148</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602103048935.png"
alt="image-20220602103048935" />
<figcaption aria-hidden="true">image-20220602103048935</figcaption>
</figure>
<h2 id="running-the-failover-cluster-validation-wizard">Running the
Failover Cluster Validation Wizard</h2>
<p>Before creating the cluster, it's better to validate first. This step
can be done on any of your node servers.</p>
<p><strong>Server Manager --&gt; Tools --&gt; Failover Cluster
Manager</strong></p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602105158375.png"
alt="image-20220602105158375" />
<figcaption aria-hidden="true">image-20220602105158375</figcaption>
</figure>
<p>Select <strong>Validate Configuration</strong></p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602105248004.png"
alt="image-20220602105248004" />
<figcaption aria-hidden="true">image-20220602105248004</figcaption>
</figure>
<p>In the <code>Select Servers or a Cluster</code> section, you may find
the <code>Selected Servers</code> list is empty. Click
<code>Browse</code> and search servers using their names.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602110339994.png"
alt="image-20220602110339994" />
<figcaption aria-hidden="true">image-20220602110339994</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602110303490.png"
alt="image-20220602110303490" />
<figcaption aria-hidden="true">image-20220602110303490</figcaption>
</figure>
<p>Run the test and see the test result.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602110507810.png"
alt="image-20220602110507810" />
<figcaption aria-hidden="true">image-20220602110507810</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602110705518.png"
alt="image-20220602110705518" />
<figcaption aria-hidden="true">image-20220602110705518</figcaption>
</figure>
<p>If all tests are successful, check the
<code>Create the cluster now using the validated nodes</code> to start
creating clusters.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220607174119603.png"
alt="image-20220607174119603" />
<figcaption aria-hidden="true">image-20220607174119603</figcaption>
</figure>
<h2 id="create-wsfc">Create WSFC</h2>
<p>If you checked the
<code>Create the cluster now using the validated nodes</code> box,
simply continue installing would successfully create a failover
cluster.</p>
<h3 id="configure-static-ip-address">Configure Static IP Address</h3>
<p>Double click on the cluster you've created, you will see the
following prompt, and check the <code>Static IP Address</code>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602121732074.png"
alt="image-20220602121732074" />
<figcaption aria-hidden="true">image-20220602121732074</figcaption>
</figure>
<h2 id="build-iscsi-virtual-disk">Build iSCSI Virtual Disk</h2>
<p>One DC as Disk Server.</p>
<p>Two node servers as clients.</p>
<h3 id="configure-disk-server">Configure Disk Server</h3>
<h4 id="install-iscsi-service">Install iSCSI service</h4>
<p>Again, in the <strong>Server Manager --&gt; Add Roles and
Features</strong>. Expand the <code>File and Storage Services</code> and
check boxes start with <code>iSCSI</code>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602123004600.png"
alt="image-20220602123004600" />
<figcaption aria-hidden="true">image-20220602123004600</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602123112170.png"
alt="image-20220602123112170" />
<figcaption aria-hidden="true">image-20220602123112170</figcaption>
</figure>
<h4 id="create-virtual-disk">Create virtual disk</h4>
<p>Click on <strong>TASKS</strong> and <strong>New iSCSI Virtual
Disk</strong>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602123606013.png"
alt="image-20220602123606013" />
<figcaption aria-hidden="true">image-20220602123606013</figcaption>
</figure>
<p>Either <code>Select by volume</code> or
<code>Type a custom path</code> works.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602123754160.png"
alt="image-20220602123754160" />
<figcaption aria-hidden="true">image-20220602123754160</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602123850625.png"
alt="image-20220602123850625" />
<figcaption aria-hidden="true">image-20220602123850625</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602124038768.png"
alt="image-20220602124038768" />
<figcaption aria-hidden="true">image-20220602124038768</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602124119537.png"
alt="image-20220602124119537" />
<figcaption aria-hidden="true">image-20220602124119537</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602124204011.png"
alt="image-20220602124204011" />
<figcaption aria-hidden="true">image-20220602124204011</figcaption>
</figure>
<p>Here I choose to query clients, as we did before in the creating
clusters section.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602124345269.png"
alt="image-20220602124345269" />
<figcaption aria-hidden="true">image-20220602124345269</figcaption>
</figure>
<p>Those are client servers that access the disk server.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602125418777.png"
alt="image-20220602125418777" />
<figcaption aria-hidden="true">image-20220602125418777</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602125735307.png"
alt="image-20220602125735307" />
<figcaption aria-hidden="true">image-20220602125735307</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602130013751.png"
alt="image-20220602130013751" />
<figcaption aria-hidden="true">image-20220602130013751</figcaption>
</figure>
<h4 id="configuration">Configuration</h4>
<p><strong>Server Manager --&gt; File and Storage Services --&gt; iSCSI
--&gt; iSCSI</strong></p>
<p>We can add initiators here.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602130314511.png"
alt="image-20220602130314511" />
<figcaption aria-hidden="true">image-20220602130314511</figcaption>
</figure>
<h3 id="configure-client-servers">Configure Client Servers</h3>
<p>For each client server, configure it as the following.</p>
<p>Double click to start the <code>iSCSI Initiator</code> service.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602132228794.png"
alt="image-20220602132228794" />
<figcaption aria-hidden="true">image-20220602132228794</figcaption>
</figure>
<p>Since my initiator for the disk server is an IQN connection, I need
to input the IP address here. Note that we can find the IP address of
the disk server by typing <code>ipconfig</code> in the command line.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602132943178.png"
alt="image-20220602132943178" />
<figcaption aria-hidden="true">image-20220602132943178</figcaption>
</figure>
<p>In the <code>Volumes and Devices</code>, click
<code>Auto Configure</code> to add the virtual disk to the volume
list.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602135943801.png"
alt="image-20220602135943801" />
<figcaption aria-hidden="true">image-20220602135943801</figcaption>
</figure>
<p>Now, we can bring the virtual disk online.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602133216522.png"
alt="image-20220602133216522" />
<figcaption aria-hidden="true">image-20220602133216522</figcaption>
</figure>
<p>In the <strong>Disk Management</strong>, we can check the status of
the virtual disk.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602133526450.png"
alt="image-20220602133526450" />
<figcaption aria-hidden="true">image-20220602133526450</figcaption>
</figure>
<p>Note that for both clients and disk servers, we need to turn the
startup type of iSCSI service to <code>auto</code>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602133916305.png"
alt="image-20220602133916305" />
<figcaption aria-hidden="true">image-20220602133916305</figcaption>
</figure>
<h3 id="add-virtual-disk-to-cluster">Add Virtual Disk to Cluster</h3>
<p>Go to the Disk Management on any node server, initialize and create a
new volume for the virtual disk.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602152433107.png"
alt="image-20220602152433107" />
<figcaption aria-hidden="true">image-20220602152433107</figcaption>
</figure>
<p>Then go to the <strong>Failover Cluster Manager</strong>, in the
<strong>Disk</strong> tab, <code>Add Disk</code>. Choose the virtual
disk created before. Then, in the active node server, we can find a new
volume in the file explorer. You can click
<code>Move Available Storage</code> to see whether the action
succeeded.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602151901691.png"
alt="image-20220602151901691" />
<figcaption aria-hidden="true">image-20220602151901691</figcaption>
</figure>
<h2 id="configure-the-cluster-quorum-settings">Configure the Cluster
Quorum Settings</h2>
<p>On the disk of the DC server, create a Witness file folder and share
it. Make sure to give permissions to your WSFC server.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606092732482.png"
alt="image-20220606092732482" />
<figcaption aria-hidden="true">image-20220606092732482</figcaption>
</figure>
<p>Right click on your cluster, <strong>More Actions --&gt; Configure
Cluster Quorum Settings</strong>. This can be done in any of your node
servers.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093158802.png"
alt="image-20220606093158802" />
<figcaption aria-hidden="true">image-20220606093158802</figcaption>
</figure>
<p>In the <code>Configure Cluster Quorum Wizard</code>,
<code>Advanced quorum configuration --&gt; All Nodes --&gt; Configure a file share witness --&gt; Select the path of your shared folder</code></p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093427113.png"
alt="image-20220606093427113" />
<figcaption aria-hidden="true">image-20220606093427113</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093544405.png"
alt="image-20220606093544405" />
<figcaption aria-hidden="true">image-20220606093544405</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093655628.png"
alt="image-20220606093655628" />
<figcaption aria-hidden="true">image-20220606093655628</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093810393.png"
alt="image-20220606093810393" />
<figcaption aria-hidden="true">image-20220606093810393</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606093833067.png"
alt="image-20220606093833067" />
<figcaption aria-hidden="true">image-20220606093833067</figcaption>
</figure>
<h2
id="install-a-sql-server-2019-failover-clustered-instance-fci">Install a
SQL Server 2019 Failover Clustered Instance (FCI)</h2>
<p>Download the SQL Server 2019 installation media on the two node
servers.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602164508936.png"
alt="image-20220602164508936" />
<figcaption aria-hidden="true">image-20220602164508936</figcaption>
</figure>
<h3 id="for-the-primary-node-server">For the primary node server</h3>
<p>Run the <strong>setup.exe</strong>,
<code>New SQL Server failover cluster installation</code> in the
<code>installation</code> tab.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606094314046.png"
alt="image-20220606094314046" />
<figcaption aria-hidden="true">image-20220606094314046</figcaption>
</figure>
<p>It will go through server checks.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602164925334.png"
alt="image-20220602164925334" />
<figcaption aria-hidden="true">image-20220602164925334</figcaption>
</figure>
<p>If you have successfully added the virtual disk to the cluster, your
virtual disks will be shown here.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602165504291.png"
alt="image-20220602165504291" />
<figcaption aria-hidden="true">image-20220602165504291</figcaption>
</figure>
<p>Create an IP Address that is different from all IP addresses of your
servers and the cluster.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602165656261.png"
alt="image-20220602165656261" />
<figcaption aria-hidden="true">image-20220602165656261</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602165816089.png"
alt="image-20220602165816089" />
<figcaption aria-hidden="true">image-20220602165816089</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602165914386.png"
alt="image-20220602165914386" />
<figcaption aria-hidden="true">image-20220602165914386</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602165926475.png"
alt="image-20220602165926475" />
<figcaption aria-hidden="true">image-20220602165926475</figcaption>
</figure>
<h3 id="for-the-secondary-node-server">For the secondary node
server</h3>
<p>Run the <strong>setup.exe</strong>,
<code>Add node to a SQL Server failover cluster</code> in the
<code>installation</code> tab.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602174455520.png"
alt="image-20220602174455520" />
<figcaption aria-hidden="true">image-20220602174455520</figcaption>
</figure>
<p>Follow similar steps to add a node to the failover cluster.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220602174957642.png"
alt="image-20220602174957642" />
<figcaption aria-hidden="true">image-20220602174957642</figcaption>
</figure>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220606102320690.png"
alt="image-20220606102320690" />
<figcaption aria-hidden="true">image-20220606102320690</figcaption>
</figure>
<h2 id="testing-failover">Testing Failover</h2>
<p>In the <strong>Failover Cluster Manager</strong>, find the cluster,
<strong>Simulate Failure</strong>.</p>
<figure>
<img
src="/2022/06/07/Build%20a%20failover%20cluster%20on%20VMAS/image-20220607174939143.png"
alt="image-20220607174939143" />
<figcaption aria-hidden="true">image-20220607174939143</figcaption>
</figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Change Vote Weight of WSFC Node Servers</title>
    <url>/2022/06/06/Change%20Vote%20Weight%20of%20WSFC%20Node%20Servers/</url>
    <content><![CDATA[<h1 id="change-vote-weight-of-wsfc-node-servers">Change Vote Weight of
WSFC Node Servers</h1>
<p>Currently, my node servers have the voting values as the
following.</p>
<figure>
<img
src="/2022/06/06/Change%20Vote%20Weight%20of%20WSFC%20Node%20Servers/image-20220606171346007.png"
alt="image-20220606171346007" />
<figcaption aria-hidden="true">image-20220606171346007</figcaption>
</figure>
<p>In <strong>Windows PowerShell</strong>, we can view the node servers
by <code>get-clusternode</code>.</p>
<figure>
<img
src="/2022/06/06/Change%20Vote%20Weight%20of%20WSFC%20Node%20Servers/image-20220606171619268.png"
alt="image-20220606171619268" />
<figcaption aria-hidden="true">image-20220606171619268</figcaption>
</figure>
<p>Then, to change the vote weight,</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># (get-clusternode NODE_NAME).nodeweight = VALUE</span><br>(<span class="hljs-built_in">get-clusternode</span> tjxiem406VM).nodeweight = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/06/Change%20Vote%20Weight%20of%20WSFC%20Node%20Servers/image-20220606172036812.png"
alt="image-20220606172036812" />
<figcaption aria-hidden="true">image-20220606172036812</figcaption>
</figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Freeze SQL service manually using WinDbg</title>
    <url>/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/</url>
    <content><![CDATA[<h1 id="freeze-sql-service-manually-using-windbg">Freeze SQL service
manually using WinDbg</h1>
<p>Currently, the SQL failover cluster works normally.</p>
<figure>
<img
src="/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/image-20220606132830651.png"
alt="image-20220606132830651" />
<figcaption aria-hidden="true">image-20220606132830651</figcaption>
</figure>
<p>In the SSMS (Microsoft SQL Server Management Studio), the following
query returns the process id and other information related to the SQL
server service.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- Thread ID</span><br><span class="hljs-keyword">SELECT</span> kpid,<span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.sysprocesses <span class="hljs-keyword">where</span> program_name  <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;Microsoft® Windows® Operating System%&#x27;</span><br><span class="hljs-comment">-- Prrocess ID</span><br><span class="hljs-keyword">SELECT</span> process_id,<span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.dm_server_services <span class="hljs-keyword">WHERE</span> servicename <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;SQL Server (MSSQLSERVER)&#x27;</span><br></code></pre></td></tr></table></figure>
<p>Note that the thread ID here is the id for the system, we need to
convert the id before using it.</p>
<figure>
<img
src="/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/image-20220606164943627.png"
alt="image-20220606164943627" />
<figcaption aria-hidden="true">image-20220606164943627</figcaption>
</figure>
<p>In <strong>WinDbg</strong>, attach to the <code>sqlserver.exe</code>
process. As you can see, the process id is the same as the query result.
Note that make sure the WinDbg is running on the node server that is the
current host of the cluster, or you may not find the
<code>sqlserver.exe</code> in the list.</p>
<figure>
<img
src="/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/image-20220606165000885.png"
alt="image-20220606165000885" />
<figcaption aria-hidden="true">image-20220606165000885</figcaption>
</figure>
<p>Convert the thread ID into hexadecimal, then enter
<code>~~[HEX Thread ID]</code> to get the thread ID (debug ID) in the
debugger. Then we can freeze the SQL service by
<code>~Debug ID f</code>.</p>
<figure>
<img
src="/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/image-20220606165508820.png"
alt="image-20220606165508820" />
<figcaption aria-hidden="true">image-20220606165508820</figcaption>
</figure>
<p>Now, we observe that the SQL service is frozen.</p>
<figure>
<img
src="/2022/06/06/Freeze%20SQL%20service%20manually%20using%20WinDbg/image-20220606170306322.png"
alt="image-20220606170306322" />
<figcaption aria-hidden="true">image-20220606170306322</figcaption>
</figure>
<p>To resume the service, detach the process from the debugger. Then the
SQL server will be brought online.</p>
]]></content>
      <tags>
        <tag>SQL Server</tag>
        <tag>WinDbg</tag>
      </tags>
  </entry>
  <entry>
    <title>Install Always On 2019 For Failover Clusters</title>
    <url>/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/</url>
    <content><![CDATA[<h1 id="install-always-on-2019-for-failover-clusters">Install Always On
2019 For Failover Clusters</h1>
<h2 id="configure-sql-server">Configure SQL Server</h2>
<p>On each of the node servers (replica), turn on <strong>SQL Server
Configuration Manager</strong>, <strong>SQL Server Services --&gt; SQL
Server (MSSQLSERVER) --&gt; Properties --&gt; Always on Availability
Groups --&gt; Enable Always on Availability Groups</strong>.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607094155497.png"
alt="image-20220607094155497" />
<figcaption aria-hidden="true">image-20220607094155497</figcaption>
</figure>
<p>Then we install a stand-alone SQL service for the two node servers
(replica).</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607113534697.png"
alt="image-20220607113534697" />
<figcaption aria-hidden="true">image-20220607113534697</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607113818112.png"
alt="image-20220607113818112" />
<figcaption aria-hidden="true">image-20220607113818112</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607114135531.png"
alt="image-20220607114135531" />
<figcaption aria-hidden="true">image-20220607114135531</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607114435948.png"
alt="image-20220607114435948" />
<figcaption aria-hidden="true">image-20220607114435948</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607114540380.png"
alt="image-20220607114540380" />
<figcaption aria-hidden="true">image-20220607114540380</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607114626758.png"
alt="image-20220607114626758" />
<figcaption aria-hidden="true">image-20220607114626758</figcaption>
</figure>
<p>Also, we need to enable <strong>Always on Availability
Groups</strong> service as we did before for the two stand-alone SQL
services.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607132532145.png"
alt="image-20220607132532145" />
<figcaption aria-hidden="true">image-20220607132532145</figcaption>
</figure>
<p>Moreover, for the secondary replica, we need to make sure its local
SQL service can be connected to the primary replica. In the <strong>SQL
Server Configuration Manager</strong> of the secondary replica,
<strong>SQL Server Network Configuration --&gt; Protocols for SQL2
</strong>, enable <code>Named Pipes</code> and <code>TCP/IP</code>.</p>
<p>You need to restart the servers to make all the changes.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607151315019.png"
alt="image-20220607151315019" />
<figcaption aria-hidden="true">image-20220607151315019</figcaption>
</figure>
<h2 id="restore-and-backup-databases">Restore and Backup Databases</h2>
<p>If you have databases that need to be added to the AG, make sure that
they are in <strong>Full Recovery Mode</strong> and remove these
databases from any <strong>tlog backup maintenance</strong>. Here I need
to restore and back up <code>AdventureWorks2019</code> database.</p>
<p>Restore the database on the primary replica, SQL 1.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607151437088.png"
alt="image-20220607151437088" />
<figcaption aria-hidden="true">image-20220607151437088</figcaption>
</figure>
<p>Change the <code>Recovery Model</code> to <code>Full</code>.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607103723163.png"
alt="image-20220607103723163" />
<figcaption aria-hidden="true">image-20220607103723163</figcaption>
</figure>
<p>Take Full and tlog backups of all databases before adding them to
AG.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">--Full Backups</span><br>BACKUP DATABASE [AdventureWorks2019] <span class="hljs-keyword">TO</span>  DISK <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL15.SQL1\MSSQL\Backup\AdventureWorks2019_FullBackup_20220607.bak&#x27;</span> <br><span class="hljs-keyword">WITH</span> NOFORMAT, NOINIT,  <br>NAME <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;AdventureWorks2019-Full Database Backup&#x27;</span>, <br><span class="hljs-keyword">SKIP</span>, NOREWIND, NOUNLOAD, COMPRESSION,  STATS <span class="hljs-operator">=</span> <span class="hljs-number">10</span>, CHECKSUM<br>GO<br><br><span class="hljs-comment">--Tlog Backups</span><br>BACKUP LOG [AdventureWorks2019] <span class="hljs-keyword">TO</span>  DISK <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;C:\Program Files\Microsoft SQL Server\MSSQL15.SQL1\MSSQL\Backup\Adventureworks2019_TlogBackup_20220607.trn&#x27;</span> <br><span class="hljs-keyword">WITH</span> NOFORMAT, NOINIT,  <br>NAME <span class="hljs-operator">=</span> N<span class="hljs-string">&#x27;AdventureWorks2019-Full Database Backup&#x27;</span>, <br><span class="hljs-keyword">SKIP</span>, NOREWIND, NOUNLOAD, COMPRESSION,  STATS <span class="hljs-operator">=</span> <span class="hljs-number">10</span>, CHECKSUM<br>GO<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607140009216.png"
alt="image-20220607140009216" />
<figcaption aria-hidden="true">image-20220607140009216</figcaption>
</figure>
<h2 id="install-always-on">Install Always On</h2>
<p>Connect to your primary replica, and start the <strong>New
Availability Group Wizard</strong>.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607142521671.png"
alt="image-20220607142521671" />
<figcaption aria-hidden="true">image-20220607142521671</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607101944506.png"
alt="image-20220607101944506" />
<figcaption aria-hidden="true">image-20220607101944506</figcaption>
</figure>
<p>If the <code>status</code> of the database is not
<code>Meets prerequisites</code>, check detailed information.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607104426006.png"
alt="image-20220607104426006" />
<figcaption aria-hidden="true">image-20220607104426006</figcaption>
</figure>
<p>Add secondary replica.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607140235168.png"
alt="image-20220607140235168" />
<figcaption aria-hidden="true">image-20220607140235168</figcaption>
</figure>
<p>In the <code>Endpoints</code> tab, to avoid the following warning, we
need to set the <code>SQL Server Service Account</code> to the domain
account instead of the local server service account. Note that the
<code>Port Number</code> should be <strong>5022</strong></p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607141252469.png"
alt="image-20220607141252469" />
<figcaption aria-hidden="true">image-20220607141252469</figcaption>
</figure>
<p>In the <strong>SQL Service Configuration Manager</strong> of both
node servers, change the account name into the <strong>domain
account</strong> as the following.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607141542135.png"
alt="image-20220607141542135" />
<figcaption aria-hidden="true">image-20220607141542135</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607141623518-16545825841621-16545825852083.png"
alt="image-20220607141623518" />
<figcaption aria-hidden="true">image-20220607141623518</figcaption>
</figure>
<p>Now, back to the wizard, refresh the page, and the account is
successfully changed.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607141929009.png"
alt="image-20220607141929009" />
<figcaption aria-hidden="true">image-20220607141929009</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607142141848.png"
alt="image-20220607142141848" />
<figcaption aria-hidden="true">image-20220607142141848</figcaption>
</figure>
<p>Note that the <code>Port</code> should be <strong>1433</strong> and
the <code>IP Address</code> should be an unused IP Address on the
network.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607142110076.png"
alt="image-20220607142110076" />
<figcaption aria-hidden="true">image-20220607142110076</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607142223919.png"
alt="image-20220607142223919" />
<figcaption aria-hidden="true">image-20220607142223919</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607142235554-16545829607005.png"
alt="image-20220607142235554" />
<figcaption aria-hidden="true">image-20220607142235554</figcaption>
</figure>
<p>If successfully installed, we can find an AG listener in the
<strong>Failover Cluster Manager</strong>.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607143200288.png"
alt="image-20220607143200288" />
<figcaption aria-hidden="true">image-20220607143200288</figcaption>
</figure>
<h2 id="configure-read-only-route">Configure Read-Only Route</h2>
<h3 id="configuration">Configuration</h3>
<p>In the <strong>Object Explorer</strong>, open the
<strong>Properties</strong> of the AG. Change
<code>Readable Secondary</code> in <strong>Availability
Replicas</strong> to <code>Read-intent Only</code>.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607154139066.png"
alt="image-20220607154139066" />
<figcaption aria-hidden="true">image-20220607154139066</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220607161723678.png"
alt="image-20220607161723678" />
<figcaption aria-hidden="true">image-20220607161723678</figcaption>
</figure>
<p>For the two stand-alone SQL servers, in the <strong>SQL Server
Configuration Manager</strong>, <strong>Protocols for SQL 1 --&gt;
TCP/IP --&gt; Properties --&gt; IP Addresses --&gt; TPC Dynamic
Ports</strong>, change the port to an unused one for both services. This
step ensures we can find the servers using a Read-only routing URL with
the same port.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608093558782.png"
alt="image-20220608093558782" />
<figcaption aria-hidden="true">image-20220608093558782</figcaption>
</figure>
<p>Fill in the <code>Read-Only Routing URL</code> with
<code>TCP://ComputerName.domain:port</code>. The <code>port</code> here
should be the number set in the previous step. Then, click on the first
instance, there will be two available replicas shown, add SQL2 and then
add SQL1. Then, click on the second instance, there will also be two
available replicas shown, add SQL1 and then add SQL2.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608101300076.png"
alt="image-20220608101300076" />
<figcaption aria-hidden="true">image-20220608101300076</figcaption>
</figure>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608101311244.png"
alt="image-20220608101311244" />
<figcaption aria-hidden="true">image-20220608101311244</figcaption>
</figure>
<p>Or, simply run the script.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">USE [master]<br> GO<br> <span class="hljs-keyword">ALTER</span> AVAILABILITY <span class="hljs-keyword">GROUP</span> [jiachengAG]<br> MODIFY REPLICA <span class="hljs-keyword">ON</span> N<span class="hljs-string">&#x27;TJXIEM405VM\SQL1&#x27;</span> <span class="hljs-keyword">WITH</span> (PRIMARY_ROLE(READ_ONLY_ROUTING_LIST <span class="hljs-operator">=</span> (N<span class="hljs-string">&#x27;TJXIEM406VM\SQL2&#x27;</span>,N<span class="hljs-string">&#x27;TJXIEM405VM\SQL1&#x27;</span>)))<br> GO<br> USE [master]<br> GO<br> <span class="hljs-keyword">ALTER</span> AVAILABILITY <span class="hljs-keyword">GROUP</span> [jiachengAG]<br> MODIFY REPLICA <span class="hljs-keyword">ON</span> N<span class="hljs-string">&#x27;TJXIEM406VM\SQL2&#x27;</span> <span class="hljs-keyword">WITH</span> (PRIMARY_ROLE(READ_ONLY_ROUTING_LIST <span class="hljs-operator">=</span> (N<span class="hljs-string">&#x27;TJXIEM405VM\SQL1&#x27;</span>,N<span class="hljs-string">&#x27;TJXIEM406VM\SQL2&#x27;</span>)))<br> GO<br></code></pre></td></tr></table></figure>
<h3 id="test">Test</h3>
<p>Connect the AG listener. Click <strong>Options</strong> to configure
the connection.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608093733764.png"
alt="image-20220608093733764" />
<figcaption aria-hidden="true">image-20220608093733764</figcaption>
</figure>
<p>Note that the connected database needs to be specified in
<code>Connection Properties</code></p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608093829901.png"
alt="image-20220608093829901" />
<figcaption aria-hidden="true">image-20220608093829901</figcaption>
</figure>
<p>Also, add <code>ApplicationIntent=ReadOnly</code> as connection
strings to enable Read-only routing.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608093924655.png"
alt="image-20220608093924655" />
<figcaption aria-hidden="true">image-20220608093924655</figcaption>
</figure>
<p>New a query, run the script, the Read-only routing works as I am
working in the primary replica while it routes read-only connections to
the secondary replica.</p>
<figure>
<img
src="/2022/06/08/Install%20AlwaysOn%202019%20For%20Failover%20Clusters/image-20220608094019762.png"
alt="image-20220608094019762" />
<figcaption aria-hidden="true">image-20220608094019762</figcaption>
</figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server 2012 实施与管理实战指南Note：数据库空间管理</title>
    <url>/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h1 id="sql-server-2012-实施与管理实战指南note数据库空间管理">SQL Server
2012 实施与管理实战指南Note：数据库空间管理</h1>
<p>数据库以数据文件和日志文件的形式保存。</p>
<p>在数据库空间管理上经常会遇到的问题：</p>
<ol type="1">
<li>数据文件（Data File）空间用尽</li>
<li>日志文件（Log File）不停增长。</li>
<li>数据文件空间无法收缩</li>
<li>自动增长（Auto grow）和自动收缩（Auto shrink）。</li>
</ol>
<h2 id="数据文件的空间使用和管理">数据文件的空间使用和管理</h2>
<p>数据文件类型：</p>
<ol type="1">
<li><p>主数据文件<code>.mdf</code></p>
<p>存储指向数据库中的其他文件路径</p>
<p>每个数据库都有一个主数据文件</p></li>
<li><p>辅助数据文件<code>.ndf</code></p>
<ol type="1">
<li><p>name（逻辑文件名）</p>
<p>文件在SQL Server里的名字，符合SQL Server标识符规则，唯一。</p></li>
<li><p>physical_name（物理文件名）</p>
<p>文件在操作系统里的名字和路径，符合操作系统文件命名规则</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002.jpg"
alt="数据库的逻辑文件名和物理文件名" />
<figcaption
aria-hidden="true">数据库的逻辑文件名和物理文件名</figcaption>
</figure></li>
</ol></li>
</ol>
<h3 id="数据文件存储结构">数据文件存储结构</h3>
<p>页（Page）</p>
<ol type="1">
<li><p>SQL Server中数据存储的基本单位是页</p></li>
<li><p>数据文件占据的磁盘空间从逻辑上划分成页（0到n连续编号）</p></li>
<li><p>SQL Server读取或写入数据的最小单位是以8 KB为单位的页</p></li>
<li><p>页头</p>
<ol type="1">
<li>每页开头的96字节</li>
<li>储存包括页码，页类型，页的可用空间，拥有该页的对象的分配单元ID等有关页的系统信息</li>
</ol></li>
<li><p>不同类型的数据，存储在不同类型的页面里</p>
<table>

<thead>
<tr class="header">
<th>页 类 型</th>
<th>内　　容</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Global Allocation Map(GAM)</td>
<td>GAM在数据文件中的第三个页上。文件和页编号为(1:2)。它用bit位来标识相应的区(extents)是否已经被分配。它差不多能标识约64000个区(8k
page * 8 bits per
byte)。也就是4G的空间。如果数据空间超过4G，那么数据库会用另外一个GAM页来标识下一个4G空间。
Bit=1: 标识当前的区是空闲的，可以用来分配 Bit=0:
标识当前的区已经被数据使用了。</td>
</tr>
<tr class="even">
<td>Shared Global Allocation Map (SGAM)</td>
<td>SGAM在数据文件中的第四个页上。文件和页编号为(1:3)。它的结构和GAM是一样的。区别在于Bit位的含义不同。
Bit=1: 区是混合区，且区内至少有一个页是可以被用来分配的 Bit=0:
区是统一区，或者是混合区但区内所有的页都是在被使用的</td>
</tr>
<tr class="odd">
<td>Page Free Space</td>
<td>存储本数据文件里所有页分配和页的可用空间的信息。</td>
</tr>
<tr class="even">
<td>Index Allocation Map</td>
<td>表或索引所使用的区的信息</td>
</tr>
<tr class="odd">
<td>Bulk Changed Map</td>
<td>自最后一条BACKUP LOG语句之后的大容量操作所修改的区的信息</td>
</tr>
<tr class="even">
<td>Differential Changed Map</td>
<td>自最后一条BACKUP DATABASE语句之后更改的区的信息</td>
</tr>
<tr class="odd">
<td>Data</td>
<td>用来存放数据</td>
</tr>
<tr class="even">
<td>Row Overflow Page</td>
<td>当一条记录超过8000字节的时，这时候就要借助Row Overflow
Page用来存放超出部分的数据</td>
</tr>
<tr class="odd">
<td>LOB</td>
<td>用来存放大型对象数据类型：text、ntext、image、nvarchar(max)、varchar(max)、varbinary(max)和xml数据。</td>
</tr>
</tbody>
</table></li>
<li><p>数据页结构</p>
<ol type="1">
<li><p>在正常页上，数据行紧接着页的标头按顺序放置。</p></li>
<li><p>页的末尾是行偏移量表，对于页中的每一行，每个行偏移表都包含一个条目。</p></li>
<li><p>每个条目记录对应行的第一个字节与页首的距离。</p></li>
<li><p>行偏移表中的条目的顺序与页中行的顺序相反</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-16551059962499.jpg"
alt="页的结构" />
<figcaption aria-hidden="true">页的结构</figcaption>
</figure></li>
</ol></li>
</ol>
<p>区（Extent）</p>
<ol type="1">
<li>8个物理上连续的页的集合，用于管理页</li>
<li>统一区
<ol type="1">
<li>区内的8个页属于同一个表</li>
</ol></li>
<li>混合区
<ol type="1">
<li>区内的8个页分别属于至少两个不同的表</li>
</ol></li>
<li>一个数据文件可以包含多个表</li>
</ol>
<p>一个数据文件可能的结构：</p>
<p>大多数页面为Data、Text、Image类型，数据文件开头多为管理页面</p>
<table style="width:100%;">

<thead>
<tr class="header">
<th>页名</th>
<th>Header</th>
<th>PFS</th>
<th>GAM</th>
<th>SGAM</th>
<th>Unused</th>
<th>Unused</th>
<th>DCM</th>
<th>BCM</th>
<th>…</th>
<th>Data</th>
<th>…</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>页号</td>
<td>1:0</td>
<td>1:1</td>
<td>1:2</td>
<td>1:3</td>
<td>1:4</td>
<td>1:5</td>
<td>1:6</td>
<td>1:7</td>
<td>…</td>
<td>1:1400</td>
<td>…</td>
</tr>
</tbody>
</table>
<h3 id="表存储结构">表存储结构</h3>
<p>SQL
Server通过每个页面的96个字节的页头和系统表，从逻辑层面上，把表的存储结构管理起来。</p>
<p>表概念关系：</p>
<ol type="1">
<li><p>每张表会有一个对应的Object ID</p></li>
<li><p>每张表拥有一个或者多个partition</p></li>
<li><p>每个partition会有一个或者多个Heap or B-Tree(Hobt)</p></li>
<li><p>每个Hobt会有至多三个分配单元（Data，LOB，Row-Overflow）用于存放数据</p></li>
<li><p>每个分配单元可以有许多页</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-16550895343212.jpg"
alt="Table organization with partitions" />
<figcaption aria-hidden="true">Table organization with
partitions</figcaption>
</figure></li>
</ol>
<p>分配单元内数据页的组织方式：</p>
<ol type="1">
<li><p>表没有任何索引</p>
<ol type="1">
<li><p>按Heap结构储存，只有一个partition，这个partition下面的每个分配单元都有一个连接指向IAM页，所有的IAM页是连接起来的</p></li>
<li><p>数据页之间没有任何关系，完全依赖IAM页组织</p></li>
<li><p>对于一个SELECT语句，SQL
Server会首先查询IAM页，然后根据IAM页提供的信息，遍历每个区,
把区内符合条件的页返回</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-16550899862434.jpg"
alt="Heap的存储结构" />
<figcaption aria-hidden="true">Heap的存储结构</figcaption>
</figure></li>
</ol></li>
<li><p>有非聚集索引而没有聚集索引的表</p>
<ol type="1">
<li><p>每个非聚集索都有一个相对应的partition，对于这个partition下面的每个分配单元都有一个连接指向root
page（根页）</p></li>
<li><p>数据页之间通过前后指针互相联系</p></li>
<li><p>真正的数据是以堆(Heap)的结构存放的</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image001.gif"
alt="非聚集索引的存储结构" />
<figcaption aria-hidden="true">非聚集索引的存储结构</figcaption>
</figure></li>
</ol></li>
<li><p>表有聚集索引</p>
<ol type="1">
<li><p>表中的聚集索引，对应的索引号是1，有一个对应的partition，对于这个partition下面的每个分配单元都有一个连接指向根页</p></li>
<li><p>叶子节点里存放的是真正的数据</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image001-16550904385237.gif"
alt="聚集索引的存储结构" />
<figcaption aria-hidden="true">聚集索引的存储结构</figcaption>
</figure></li>
</ol></li>
</ol>
<h3 id="案例跟踪索引的存储结构">案例：跟踪索引的存储结构</h3>
<p>跟踪AdventureWorks2019中表Employee的空间使用。</p>
<p>得到表Employee的object_id：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.objects <span class="hljs-keyword">WHERE</span> name <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Employee&#x27;</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220613152251686.png"
alt="查询表的object_id" />
<figcaption aria-hidden="true">查询表的object_id</figcaption>
</figure>
<p>可以看到object_id是<code>1893581784</code>.</p>
<p>查询表格中包含的partition：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.partitions <span class="hljs-keyword">WHERE</span> object_id <span class="hljs-operator">=</span> <span class="hljs-number">1893581784</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220613152528367.png"
alt="查询表的partitions" />
<figcaption aria-hidden="true">查询表的partitions</figcaption>
</figure>
<p>表Employee有6个partition，分别对应于不同的索引，每个partition有290条记录。<code>hobt_id</code>用来表示在该partition内heap
或 B树结构的标识。</p>
<p>查询partition编号5的分配单元信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.allocation_units <span class="hljs-keyword">WHERE</span> container_id <span class="hljs-operator">=</span> <span class="hljs-number">72057594054770688</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220613153048177.png"
alt="查询分配单元信息" />
<figcaption aria-hidden="true">查询分配单元信息</figcaption>
</figure>
<p>查询结果说明，对于<code>partition_id = 72057594054770688</code>，只有一个分配单元，用于存放数据页（IN_ROW_DATA），大小为25个page，其中数据页为2个页。</p>
<p>查询更加详细的分配单元信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.system_internals_allocation_units <span class="hljs-keyword">WHERE</span> container_id <span class="hljs-operator">=</span> <span class="hljs-number">72057594054770688</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220613153517266.png"
alt="显示更具体的分配单元信息" />
<figcaption aria-hidden="true">显示更具体的分配单元信息</figcaption>
</figure>
<p>可以看到，根页的位置是<code>0x302700000100</code>，使用倒序解码，一次去一个字节（两位），字节中顺序不变，解码为<code>00 01 00 00 27 30</code>，前面两个字节表明的是所在的文件组编号，后面的4个字节表明页的编号，所以页面编号是（1，10032）</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-165528044275119.jpg"
alt="页的结构" />
<figcaption aria-hidden="true">页的结构</figcaption>
</figure>
<p>输出一定格式的指定页面：</p>
<p>DBCC PAGE 命令，使用前需要打开跟踪标志3604</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># DBCC PAGE(<span class="hljs-operator">&lt;</span>db_name<span class="hljs-operator">|</span>db ID<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>file_id<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>page_id<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>format_id<span class="hljs-operator">&gt;</span>)<br># format_id <span class="hljs-operator">=</span> <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span> 常用<span class="hljs-number">1</span>, <span class="hljs-number">3</span><br>DBCC TRACEON(<span class="hljs-number">3604</span>)<br>DBCC PAGE(<span class="hljs-string">&#x27;AdventureWorks2019&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">10032</span>, <span class="hljs-number">1</span>)<br>DBCC TRACEOFF(<span class="hljs-number">3604</span>)<br></code></pre></td></tr></table></figure>
<p>输出的结果如下：</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">DBCC</span> execution completed. If DBCC printed error messages, contact your system administrator.<br><br><span class="hljs-attribute">PAGE</span>: (<span class="hljs-number">1</span>:<span class="hljs-number">10032</span>)<br><br><br><span class="hljs-attribute">BUFFER</span>:<br><br><br><span class="hljs-attribute">BUF</span> @<span class="hljs-number">0</span>x000002E5CBD5FE40<br><br><span class="hljs-attribute">bpage</span> = <span class="hljs-number">0</span>x000002E5B8EB0000          bPmmpage = <span class="hljs-number">0</span>x0000000000000000       bsort_r_nextbP = <span class="hljs-number">0</span>x000002E5CBD5FD90<br><span class="hljs-attribute">bsort_r_prevbP</span> = <span class="hljs-number">0</span>x0000000000000000 bhash = <span class="hljs-number">0</span>x0000000000000000          bpageno = (<span class="hljs-number">1</span>:<span class="hljs-number">10032</span>)<br><span class="hljs-attribute">bpart</span> = <span class="hljs-number">2</span>                           ckptGen = <span class="hljs-number">0</span>x0000000000000000        bDirtyRefCount = <span class="hljs-number">0</span><br><span class="hljs-attribute">bstat</span> = <span class="hljs-number">0</span>x9                         breferences = <span class="hljs-number">1</span>                     berrcode = <span class="hljs-number">0</span><br><span class="hljs-attribute">bUse1</span> = <span class="hljs-number">47457</span>                       bstat2 = <span class="hljs-number">0</span>x0                        blog = <span class="hljs-number">0</span>x15ab215a<br><span class="hljs-attribute">bsampleCount</span> = <span class="hljs-number">0</span>                    bIoCount = <span class="hljs-number">0</span>                        resPoolId = <span class="hljs-number">0</span><br><span class="hljs-attribute">bcputicks</span> = <span class="hljs-number">0</span>                       bReadMicroSec = <span class="hljs-number">251</span>                 bDirtyContext = <span class="hljs-number">0</span>x0000000000000000<br><span class="hljs-attribute">bDbPageBroker</span> = <span class="hljs-number">0</span>x0000000000000000  bdbid = <span class="hljs-number">5</span>                           bpru = <span class="hljs-number">0</span>x000002E5BD500040<br><br><span class="hljs-attribute">PAGE</span> HEADER:<br><br><br><span class="hljs-attribute">Page</span> @<span class="hljs-number">0</span>x000002E5B8EB0000<br><br><span class="hljs-attribute">m_pageId</span> = (<span class="hljs-number">1</span>:<span class="hljs-number">10032</span>)                m_headerVersion = <span class="hljs-number">1</span>                 m_type = <span class="hljs-number">2</span><br><span class="hljs-attribute">m_typeFlagBits</span> = <span class="hljs-number">0</span>x0                m_level = <span class="hljs-number">1</span>                         m_flagBits = <span class="hljs-number">0</span>x220<br><span class="hljs-attribute">m_objId</span> (AllocUnitId.idObj) = <span class="hljs-number">379</span>   m_indexId (AllocUnitId.idInd) = <span class="hljs-number">256</span> <br><span class="hljs-attribute">Metadata</span>: AllocUnitId = <span class="hljs-number">72057594062766080</span>                                <br><span class="hljs-attribute">Metadata</span>: PartitionId = <span class="hljs-number">72057594054770688</span>                                Metadata: IndexId = <span class="hljs-number">5</span><br><span class="hljs-attribute">Metadata</span>: ObjectId = <span class="hljs-number">1893581784</span>     m_prevPage = (<span class="hljs-number">0</span>:<span class="hljs-number">0</span>)                  m_nextPage = (<span class="hljs-number">0</span>:<span class="hljs-number">0</span>)<br><span class="hljs-attribute">pminlen</span> = <span class="hljs-number">7</span>                         m_slotCnt = <span class="hljs-number">2</span>                       m_freeCnt = <span class="hljs-number">8038</span><br><span class="hljs-attribute">m_freeData</span> = <span class="hljs-number">150</span>                    m_reservedCnt = <span class="hljs-number">0</span>                   m_lsn = (<span class="hljs-number">38</span>:<span class="hljs-number">4326</span>:<span class="hljs-number">40</span>)<br><span class="hljs-attribute">m_xactReserved</span> = <span class="hljs-number">0</span>                  m_xdesId = (<span class="hljs-number">0</span>:<span class="hljs-number">2188</span>)                 m_ghostRecCnt = <span class="hljs-number">0</span><br><span class="hljs-attribute">m_tornBits</span> = -<span class="hljs-number">637479848</span>             DB Frag ID = <span class="hljs-number">1</span>                      <br><br><span class="hljs-attribute">Allocation</span> Status<br><br><span class="hljs-attribute">GAM</span> (<span class="hljs-number">1</span>:<span class="hljs-number">2</span>) = ALLOCATED               SGAM (<span class="hljs-number">1</span>:<span class="hljs-number">3</span>) = NOT ALLOCATED          <br><span class="hljs-attribute">PFS</span> (<span class="hljs-number">1</span>:<span class="hljs-number">8088</span>) = <span class="hljs-number">0</span>x40 ALLOCATED   <span class="hljs-number">0</span>_PCT_FULL                               DIFF (<span class="hljs-number">1</span>:<span class="hljs-number">6</span>) = NOT CHANGED<br><span class="hljs-attribute">ML</span> (<span class="hljs-number">1</span>:<span class="hljs-number">7</span>) = NOT MIN_LOGGED           <br><br><span class="hljs-attribute">DATA</span>:<br><br><br><span class="hljs-attribute">Slot</span> <span class="hljs-number">0</span>, Offset <span class="hljs-number">0</span>x60, Length <span class="hljs-number">27</span>, DumpStyle BYTE<br><br><span class="hljs-attribute">Record</span> Type = INDEX_RECORD          Record Attributes =  VARIABLE_COLUMNS<br><span class="hljs-attribute">Record</span> Size = <span class="hljs-number">27</span>                    <br><span class="hljs-attribute">Memory</span> Dump @<span class="hljs-number">0</span>x000000F51E7F8060<br><br><span class="hljs-attribute">0000000000000000</span>:   <span class="hljs-number">26</span>f82600 <span class="hljs-number">00010001</span> <span class="hljs-number">001</span>b0031 <span class="hljs-number">00300037</span> <span class="hljs-number">00300038</span>  &amp;ø&amp;........<span class="hljs-number">1.0.7.0</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">0000000000000014</span>:   <span class="hljs-number">00310030</span> <span class="hljs-number">003000</span>                               .<span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<br><br><span class="hljs-attribute">Slot</span> <span class="hljs-number">1</span>, Offset <span class="hljs-number">0</span>x7b, Length <span class="hljs-number">27</span>, DumpStyle BYTE<br><br><span class="hljs-attribute">Record</span> Type = INDEX_RECORD          Record Attributes =  VARIABLE_COLUMNS<br><span class="hljs-attribute">Record</span> Size = <span class="hljs-number">27</span>                    <br><span class="hljs-attribute">Memory</span> Dump @<span class="hljs-number">0</span>x000000F51E7F807B<br><br><span class="hljs-attribute">0000000000000000</span>:   <span class="hljs-number">26002700</span> <span class="hljs-number">00010001</span> <span class="hljs-number">001</span>b0038 <span class="hljs-number">00370032</span> <span class="hljs-number">00360038</span>  &amp;.&#x27;........<span class="hljs-number">8.7.2.6</span>.<span class="hljs-number">8</span><br><span class="hljs-attribute">0000000000000014</span>:   <span class="hljs-number">00380033</span> <span class="hljs-number">003700</span>                               .<span class="hljs-number">8</span>.<span class="hljs-number">3</span>.<span class="hljs-number">7</span>.<br><br><span class="hljs-attribute">OFFSET</span> TABLE:<br><br><span class="hljs-attribute">Row</span> - Offset                        <br><span class="hljs-attribute">1</span> (<span class="hljs-number">0</span>x1) - <span class="hljs-number">123</span> (<span class="hljs-number">0</span>x7b)                <br><span class="hljs-attribute">0</span> (<span class="hljs-number">0</span>x0) - <span class="hljs-number">96</span> (<span class="hljs-number">0</span>x60)                 <br><br><br><span class="hljs-attribute">DBCC</span> execution completed. If DBCC printed error messages, contact your system administrator.<br><span class="hljs-attribute">DBCC</span> execution completed. If DBCC printed error messages, contact your system administrator.<br><br><span class="hljs-attribute">Completion</span> time: <span class="hljs-number">2022</span>-<span class="hljs-number">06</span>-<span class="hljs-number">15</span>T16:<span class="hljs-number">06</span>:<span class="hljs-number">02</span>.<span class="hljs-number">9847148</span>+<span class="hljs-number">08</span>:<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure>
<ol type="1">
<li><p>BUFFER标识该数据页在内存中的位置</p></li>
<li><p>PAGE HEADER显示了页头的信息</p>
<ol type="1">
<li><p>这里<code>m_prevPage = (0:0) m_nextPage = (0:0)</code>可以看出这页是根页</p></li>
<li><p>部分页头属性解析</p>
<table>

<thead>
<tr class="header">
<th>页头属性</th>
<th>解析</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>m_pageID</td>
<td>页的编号</td>
</tr>
<tr class="even">
<td>m_headerVersion</td>
<td>页头格式的版本，这个值是1</td>
</tr>
<tr class="odd">
<td>m_type</td>
<td>页的类型
1：表明是数据页。包括heap结构的数据，和聚集索引里B树结构的最底层页
2：索引页。包括聚集索引里B树结构的非底层页和非聚集索引的所有页
其他页类型，在此暂不提及。</td>
</tr>
<tr class="even">
<td>m_typeFlagBits</td>
<td>基本上用不到</td>
</tr>
<tr class="odd">
<td>m_level</td>
<td>在B树结构中的层级。最底层的层级是0.</td>
</tr>
<tr class="even">
<td>m_flagBits</td>
<td>页的属性。如0x200表明页有checksum检查</td>
</tr>
<tr class="odd">
<td>m_prevPage, m_nextPage</td>
<td>在B树结构的同一层级数据页之间，互相通过m_prevPage和m_nextPage连接起来。</td>
</tr>
<tr class="even">
<td>m_slotCnt</td>
<td>当前页中，有多少条记录</td>
</tr>
<tr class="odd">
<td>m_freeCnt</td>
<td>这是当前页中，还剩下多少空间，以字节为单位</td>
</tr>
<tr class="even">
<td>m_lsn</td>
<td>这是当前页的所有记录中，最后一个改变相对应的日志记录号(Log Sequence
Number)</td>
</tr>
</tbody>
</table></li>
</ol></li>
<li><p>注意这里第一个offset正好是96，对应页头信息</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Row</span> - Offset                        <br><span class="hljs-attribute">1</span> (<span class="hljs-number">0</span>x1) - <span class="hljs-number">123</span> (<span class="hljs-number">0</span>x7b)                <br><span class="hljs-attribute">0</span> (<span class="hljs-number">0</span>x0) - <span class="hljs-number">96</span> (<span class="hljs-number">0</span>x60) <br></code></pre></td></tr></table></figure></li>
<li><p>非聚集索引键指向的内容</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><code class="hljs maxima">Slot <span class="hljs-number">0</span>, Offset <span class="hljs-number">0x60</span>, Length <span class="hljs-number">27</span>, DumpStyle BYTE<br>...<br><span class="hljs-number">0000000000000000</span>:   26f82600 <span class="hljs-number">00010001</span> <span class="hljs-number">001b0031</span> <span class="hljs-number">00300037</span> <span class="hljs-number">00300038</span>  &amp;ø&amp;........<span class="hljs-number">1.0</span><span class="hljs-number">.7</span><span class="hljs-number">.0</span><span class="hljs-number">.8</span><br><span class="hljs-number">0000000000000014</span>:   <span class="hljs-number">00310030</span> <span class="hljs-number">003000</span>                               .<span class="hljs-number">1.0</span><span class="hljs-number">.0</span>.<br>Slot <span class="hljs-number">1</span>, Offset <span class="hljs-number">0x7b</span>, Length <span class="hljs-number">27</span>, DumpStyle BYTE<br>...<br><span class="hljs-number">0000000000000000</span>:   <span class="hljs-number">26002700</span> <span class="hljs-number">00010001</span> <span class="hljs-number">001b0038</span> <span class="hljs-number">00370032</span> <span class="hljs-number">00360038</span>  &amp;.&#x27;........<span class="hljs-number">8.7</span><span class="hljs-number">.2</span><span class="hljs-number">.6</span><span class="hljs-number">.8</span><br><span class="hljs-number">0000000000000014</span>:   <span class="hljs-number">00380033</span> <span class="hljs-number">003700</span>                               .<span class="hljs-number">8.3</span><span class="hljs-number">.7</span>.<br></code></pre></td></tr></table></figure>
<ol type="1">
<li><p>对于<code>10708100</code>，所指向的页面位置是<code>f82600 000100</code>，即(1,
9976)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">DBCC TRACEON(<span class="hljs-number">3604</span>)<br>DBCC PAGE(<span class="hljs-string">&#x27;AdventureWorks2019&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9976</span>, <span class="hljs-number">1</span>)<br>DBCC TRACEOFF(<span class="hljs-number">3604</span>)<br></code></pre></td></tr></table></figure>
<ol type="1">
<li><p>在Page Header可以发现，这一页在树的边缘，下一页页是(1:9984)</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">m_prevPage</span> = (<span class="hljs-number">0</span>:<span class="hljs-number">0</span>)                  m_nextPage = (<span class="hljs-number">1</span>:<span class="hljs-number">9984</span>)<br></code></pre></td></tr></table></figure></li>
<li><p>可以看到一共有255个slot，即这个页面有255个child node</p></li>
</ol></li>
<li><p>对于<code>87268837</code>，所指向的页面位置是<code>02700 000100</code>，即(1,
9984)，与上述发现相符</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">DBCC TRACEON(<span class="hljs-number">3604</span>)<br>DBCC PAGE(<span class="hljs-string">&#x27;AdventureWorks2019&#x27;</span>, <span class="hljs-number">1</span>, <span class="hljs-number">9984</span>, <span class="hljs-number">1</span>)<br>DBCC TRACEOFF(<span class="hljs-number">3604</span>)<br></code></pre></td></tr></table></figure>
<ol type="1">
<li><p>在page header可以发现，这一页在树的另一边缘，前一页是(1:9976)</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">m_prevPage</span> = (<span class="hljs-number">1</span>:<span class="hljs-number">9976</span>)               m_nextPage = (<span class="hljs-number">0</span>:<span class="hljs-number">0</span>)<br></code></pre></td></tr></table></figure></li>
<li><p>可以看到一共有35个slot</p></li>
</ol></li>
<li><p>如果我们查看对于Employee这个object，index=5的时候，对应的信息是NationalIDNumber</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> sys.indexes <span class="hljs-keyword">Where</span> object_id <span class="hljs-operator">=</span> <span class="hljs-number">1893581784</span><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615163547071.png"
alt="查询objectid" />
<figcaption aria-hidden="true">查询objectid</figcaption>
</figure></li>
<li><p>直接查看NationalIDNumber，我们可以发现，一共有290=255+35行，10708100和87268837属于NationalIDNumber。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> NationalIDNumber <span class="hljs-keyword">FROM</span> HumanResources.Employee<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615163940802.png"
alt="查询NationalIDNumber" />
<figcaption aria-hidden="true">查询NationalIDNumber</figcaption>
</figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615165055657.png"
alt="非聚集索引结构" />
<figcaption aria-hidden="true">非聚集索引结构</figcaption>
</figure></li>
</ol></li>
</ol>
<h3
id="案例使用sp_allocationmetadata查看分配单元信息">案例：使用sp_AllocationMetadata查看分配单元信息</h3>
<blockquote>
<p>Reference <a
href="https://www.sqlskills.com/blogs/paul/inside-the-storage-engine-sp_allocationmetadata-putting-undocumented-system-catalog-views-to-work/">Inside
The Storage Engine: sp_AllocationMetadata - Paul S. Randal
(sqlskills.com)</a></p>
</blockquote>
<p>创建procedure</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">/*============================================================================</span><br><span class="hljs-comment">  File:     sp_AllocationMetadata.sql</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  Summary:  This script cracks the system tables to provide top-level</span><br><span class="hljs-comment">            metadata about a table or index</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  SQL Server Versions: 2005 onwards</span><br><span class="hljs-comment">------------------------------------------------------------------------------</span><br><span class="hljs-comment">  Written by Paul S. Randal, SQLskills.com</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  (c) 2014, SQLskills.com. All rights reserved.</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  For more scripts and sample code, check out</span><br><span class="hljs-comment">    http://www.SQLskills.com</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  You may alter this code for your own *non-commercial* purposes. You may</span><br><span class="hljs-comment">  republish altered code as long as you include this copyright and give due</span><br><span class="hljs-comment">  credit, but you must obtain prior permission before blogging this code.</span><br><span class="hljs-comment"> </span><br><span class="hljs-comment">  THIS CODE AND INFORMATION ARE PROVIDED &quot;AS IS&quot; WITHOUT WARRANTY OF</span><br><span class="hljs-comment">  ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED</span><br><span class="hljs-comment">  TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A</span><br><span class="hljs-comment">  PARTICULAR PURPOSE.</span><br><span class="hljs-comment">============================================================================*/</span><br> <br><span class="hljs-comment">-- USE [master];</span><br><span class="hljs-comment">-- GO</span><br> <br>IF OBJECT_ID (N<span class="hljs-string">&#x27;sp_AllocationMetadata&#x27;</span>) <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span><br>    <span class="hljs-keyword">DROP</span> <span class="hljs-keyword">PROCEDURE</span> [sp_AllocationMetadata];<br>GO<br> <br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">PROCEDURE</span> [sp_AllocationMetadata]<br>(<br>    <span class="hljs-variable">@object</span> SYSNAME <span class="hljs-operator">=</span> <span class="hljs-keyword">NULL</span><br>)<br><span class="hljs-keyword">AS</span><br><span class="hljs-keyword">SELECT</span><br>    OBJECT_NAME ([sp].[object_id]) <span class="hljs-keyword">AS</span> [Object Name],<br>    [sp].[index_id] <span class="hljs-keyword">AS</span> [Index ID],<br>    [sp].[partition_id] <span class="hljs-keyword">AS</span> [<span class="hljs-keyword">Partition</span> ID],<br>        [sa].[allocation_unit_id] <span class="hljs-keyword">AS</span> [Alloc Unit ID],<br>    [sa].[type_desc] <span class="hljs-keyword">AS</span> [Alloc Unit Type],<br>    <span class="hljs-string">&#x27;(&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">6</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">6</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">5</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">20</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">4</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">3</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">2</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_page], <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;)&#x27;</span> <span class="hljs-keyword">AS</span> [<span class="hljs-keyword">First</span> Page],<br>    <span class="hljs-string">&#x27;(&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">6</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">6</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">5</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">20</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">4</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">3</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">2</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[root_page], <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;)&#x27;</span> <span class="hljs-keyword">AS</span> [Root Page],<br>    <span class="hljs-string">&#x27;(&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">6</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">6</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">5</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;:&#x27;</span> <span class="hljs-operator">+</span> <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">VARCHAR</span> (<span class="hljs-number">20</span>),<br>        <span class="hljs-keyword">CONVERT</span> (<span class="hljs-type">INT</span>,<br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">4</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">3</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">2</span>, <span class="hljs-number">1</span>) <span class="hljs-operator">+</span><br>            <span class="hljs-built_in">SUBSTRING</span> ([sa].[first_iam_page], <span class="hljs-number">1</span>, <span class="hljs-number">1</span>))) <span class="hljs-operator">+</span><br>    <span class="hljs-string">&#x27;)&#x27;</span> <span class="hljs-keyword">AS</span> [<span class="hljs-keyword">First</span> IAM Page]<br><span class="hljs-keyword">FROM</span><br>    sys.system_internals_allocation_units <span class="hljs-keyword">AS</span> [sa],<br>    sys.partitions <span class="hljs-keyword">AS</span> [sp]<br><span class="hljs-keyword">WHERE</span><br>    [sa].[container_id] <span class="hljs-operator">=</span> [sp].[partition_id]<br><span class="hljs-keyword">AND</span> [sp].[object_id] <span class="hljs-operator">=</span><br>    (<span class="hljs-keyword">CASE</span> <span class="hljs-keyword">WHEN</span> (<span class="hljs-variable">@object</span> <span class="hljs-keyword">IS</span> <span class="hljs-keyword">NULL</span>)<br>        <span class="hljs-keyword">THEN</span> [sp].[object_id]<br>        <span class="hljs-keyword">ELSE</span> OBJECT_ID (<span class="hljs-variable">@object</span>)<br>    <span class="hljs-keyword">END</span>);<br>GO<br> <br><span class="hljs-keyword">EXEC</span> sys.sp_MS_marksystemobject [sp_AllocationMetadata];<br>GO<br> <br><span class="hljs-comment">--USE [AdventureWorks];</span><br><span class="hljs-comment">--GO</span><br><span class="hljs-comment">--EXEC [sp_AllocationMetadata] N&#x27;HumanResources.Employee&#x27;;</span><br><span class="hljs-comment">--GO</span><br></code></pre></td></tr></table></figure>
<p>在另外的连接中执行</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">EXEC</span> [sp_AllocationMetadata] N<span class="hljs-string">&#x27;HumanResources.Employee&#x27;</span>;<br>GO<br></code></pre></td></tr></table></figure>
<p>即可查看</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615165642548.png"
alt="sp_AllocationMetadata结果" />
<figcaption aria-hidden="true">sp_AllocationMetadata结果</figcaption>
</figure>
<h2 id="日志文件的空间使用和管理">日志文件的空间使用和管理</h2>
<p>每个数据库都有事务日志，用于记录所有事务以及每个事务对数据库所做的修改。</p>
<p>SQL
Server对数据页的插入、修改和删除，是对缓冲区高速缓存（内存）中的页副本进行操作，操作完成后就提交事务，当数据库中出现检查点或缓冲区不够时，才写入磁盘。</p>
<p>SQL Server会确保在提交事务时或之前就将日志记录写入磁盘。</p>
<p>如果日志文件缺失或者损坏，将等同于数据库损坏。</p>
<p>刷新页：将修改后的数据页从高速缓冲存储器写入磁盘</p>
<p>脏页：在高速缓存中修改但尚未写入磁盘的页</p>
<p>日志文件组织方式：</p>
<ol type="1">
<li>每一物理日志文件由多个虚拟日志单元组成</li>
<li>虚拟日志单元没有固定大小</li>
<li>一个物理日志文件所包含的虚拟日志单元数不固定</li>
<li>管理员不能配置或设置虚拟日志单元的大小或数量</li>
<li>一个虚拟日志单元可以分成很多块，块内有很多具体的日志记录</li>
<li>对于每条日志记录，都有一个LSN(Log Sequence Number)编号
<ol type="1">
<li>虚拟日志单元(Virtual Log
File)的序列号：虚拟日志单元中块的编号：块中日志记录的编号</li>
<li>如对于某个LSN，其编号为0000001D:000000FD:0002，这表明这个LSN是属于虚拟日志
0000001D，在该虚拟日志中属于块000000FD, 然后在该块中对应记录2</li>
</ol></li>
</ol>
<p>事务日志文件结构：</p>
<ol type="1">
<li><p>回绕</p></li>
<li><p>当创建数据库时，逻辑日志文件从物理日志文件的始端开始，新日志记录被添加到逻辑日志的末端，然后向物理日志的末端扩张，扩张到物理日志文件末端时，回绕到始端</p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-165511277762811.jpg"
alt="事务日志的外观" />
<figcaption aria-hidden="true">事务日志的外观</figcaption>
</figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-165511279443213.jpg"
alt="事务日志循环使用" />
<figcaption aria-hidden="true">事务日志循环使用</figcaption>
</figure></li>
</ol>
<p>查看日志文件中的信息：</p>
<ol type="1">
<li><p>DBCC LOG</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># DBCC <span class="hljs-built_in">LOG</span>(<span class="hljs-operator">&lt;</span>db_id<span class="hljs-operator">|</span>db name<span class="hljs-operator">&gt;</span>, <span class="hljs-operator">&lt;</span>formart_id<span class="hljs-operator">&gt;</span>)<br># <span class="hljs-operator">&lt;</span>db_id<span class="hljs-operator">|</span>db name<span class="hljs-operator">&gt;</span>：目标数据库编号或者是数据库名<br># <span class="hljs-operator">&lt;</span>format_id<span class="hljs-operator">&gt;</span>：DBCC LOG命令翻译和解释日志记录的方式，一般使用<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 创建测试数据库，观察记录<br><span class="hljs-keyword">CREATE</span> DATABASE [TESTLOG]<br>GO<br>USE [TESTLOG]<br>GO<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> [TEST] (<br>	[ID] <span class="hljs-type">int</span>,<br>	[name] nvarchar(<span class="hljs-number">50</span>)<br>)<br>GO<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> [TEST] <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;aaaa&#x27;</span>) <br><span class="hljs-keyword">UPDATE</span> [TEST] <span class="hljs-keyword">set</span> [name] <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;xxxx&#x27;</span> <span class="hljs-keyword">where</span> [ID] <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br>GO<br>DBCC TRACEON(<span class="hljs-number">3604</span>)<br>GO<br>DBCC <span class="hljs-built_in">LOG</span>(TESTLOG,<span class="hljs-number">3</span>)<br>GO<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/clip_image002-165511347884615.jpg"
alt="DBCC LOG结果中3条和UPDATE动作相关的记录" />
<figcaption aria-hidden="true">DBCC
LOG结果中3条和UPDATE动作相关的记录</figcaption>
</figure></li>
<li><p>ApexSQL Log</p></li>
</ol>
<p>数据库的更新操作：</p>
<ol type="1">
<li>数据库日志文件记录了旧值和新值</li>
<li>行级别操作</li>
<li>Redo就是用新的值覆盖</li>
<li>Undo就是用旧的值覆盖</li>
<li>DELETE和TRUNCATE
<ol type="1">
<li>使用DELECT删除表，是行级别的删除，LSN编号不同，整个DELECT语句是一个事务，所以事务编号相同</li>
<li>使用TRUNCATE删除表，不记录日志
<ol type="1">
<li>删除记录量大的表，避免产生大量日志文件</li>
<li>但是不能Undo</li>
</ol></li>
</ol></li>
</ol>
<p>SQL Server的日志记录特点：</p>
<ol type="1">
<li>日志记录的是数据的变化，面向数据库服务</li>
<li>每条记录都有它唯一的编号（LSN），并且记录了它属于的事务号</li>
<li>日志记录的行数和实际修改的数据量有关，修改越多，日志行数越多</li>
<li>日志记录了事务发生的时间，但是不记录发起者的程序名称和客户端信息</li>
<li>SQL Server能够从日志记录里面读到数据修改前的值和修改后的值</li>
</ol>
<h2 id="空间使用计算方法">空间使用计算方法</h2>
<table>
<thead>
<tr class="header">
<th>命　　令</th>
<th>精确单位</th>
<th>性能影响</th>
<th>准确性</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>DBCC SHOWFILESTATS</td>
<td>区</td>
<td>无</td>
<td>基本准确</td>
</tr>
<tr class="even">
<td>sp_spaceused</td>
<td>页</td>
<td>无</td>
<td>有时不准确</td>
</tr>
<tr class="odd">
<td>sp_spaceused + <em>updateusage</em></td>
<td>页</td>
<td>稍有</td>
<td>基本准确</td>
</tr>
<tr class="even">
<td>sys.dm_db_partition_stats</td>
<td>页</td>
<td>无</td>
<td>有时不准确</td>
</tr>
<tr class="odd">
<td>DBCC SHOWCONTIG</td>
<td>页/区</td>
<td>有</td>
<td>准确</td>
</tr>
</tbody>
</table>
<h3 id="空间使用计算方法-1">空间使用计算方法</h3>
<ol type="1">
<li><p><code>sp_spaceused</code></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 显示行数、保留的磁盘空间以及当前数据库中的表、索引视图等数据库对象所使用的磁盘空间<br># 若不指定objectname，则返回整个数据库的结果<br>sp_spaceused [[ <span class="hljs-variable">@objname</span> <span class="hljs-operator">=</span> ] <span class="hljs-string">&#x27;objname&#x27;</span> ]   <br>[, [ <span class="hljs-variable">@updateusage</span> <span class="hljs-operator">=</span> ] <span class="hljs-string">&#x27;updateusage&#x27;</span> ]  <br>[, [ <span class="hljs-variable">@mode</span> <span class="hljs-operator">=</span> ] <span class="hljs-string">&#x27;mode&#x27;</span> ]  <br>[, [ <span class="hljs-variable">@oneresultset</span> <span class="hljs-operator">=</span> ] oneresultset ]  <br>[, [ <span class="hljs-variable">@include</span>_total_xtp_storage <span class="hljs-operator">=</span> ] include_total_xtp_storage ]<br></code></pre></td></tr></table></figure>
<ol type="1">
<li><figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614144152951.png"
alt="sp_spaceused返回结果" />
<figcaption aria-hidden="true">sp_spaceused返回结果</figcaption>
</figure></li>
<li><p>统计单位：页</p></li>
<li><p>局限：</p>
<ol type="1">
<li>数据库发生较大变化后，结果常常不准确
<ol type="1">
<li>使用<code>sp_spaceused + updateusage</code>来要求SQL
Server为这句指令更新管理视图里的统计信息</li>
<li>但消耗资源</li>
</ol></li>
<li>无法统计tempdb</li>
<li>一次只能查询一个对象
<ol type="1">
<li>可以通过直接查询sys.dm_db_partition_stats以及相关的管理视图来解决</li>
</ol></li>
</ol></li>
</ol></li>
<li><p><strong>Management Studio --&gt; Right click on data base --&gt;
Reports --&gt; Standard Reports --&gt; Disk Usage</strong></p>
<ol type="1">
<li><figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614144631043.png"
alt="Management Studio的Disk Usage报表" />
<figcaption aria-hidden="true">Management Studio的Disk
Usage报表</figcaption>
</figure></li>
<li><p>调用了<code>DBCC ShowFileStats</code>命令</p></li>
</ol></li>
<li><p><code>DBCC ShowFileStats</code></p>
<ol type="1">
<li>按照区的使用情况统计数据文件的使用大小</li>
<li>从系统分配页面（GAM、SGAM）读取区分配信息以计算数据库数据文件区的总数和已使用的区的总数。</li>
<li>比较准确可靠</li>
<li>不会增加额外系统负担</li>
<li><img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614155239877.png"
title="fig:" alt="DBCC SHOWFILESTATS结果" /></li>
</ol></li>
<li><p><code>sys.dm_db_partition_stats</code></p>
<ol type="1">
<li><p>统计单位：页</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 对数据库内所有对象进行统计<br><span class="hljs-keyword">SELECT</span> o.name ,<br>         <span class="hljs-built_in">SUM</span> (p.reserved_page_count) <span class="hljs-keyword">AS</span> reserved_page_count,<br>         <span class="hljs-built_in">SUM</span> (p.used_page_count) <span class="hljs-keyword">AS</span> used_page_count,<br>         <span class="hljs-built_in">SUM</span> (<br>            <span class="hljs-keyword">CASE</span><br>                <span class="hljs-keyword">WHEN</span> (p.index_id <span class="hljs-operator">&lt;</span> <span class="hljs-number">2</span>) <span class="hljs-keyword">THEN</span> (p.in_row_data_page_count <span class="hljs-operator">+</span> <br>                  p.lob_used_page_count <span class="hljs-operator">+</span> p.row_overflow_used_page_count)<br>                <span class="hljs-keyword">ELSE</span> p.lob_used_page_count <span class="hljs-operator">+</span> p.row_overflow_used_page_count<br>            <span class="hljs-keyword">END</span><br>            ) <span class="hljs-keyword">AS</span> DataPages,<br>         <span class="hljs-built_in">SUM</span> (<br>            <span class="hljs-keyword">CASE</span><br>                <span class="hljs-keyword">WHEN</span> (p.index_id <span class="hljs-operator">&lt;</span> <span class="hljs-number">2</span>) <span class="hljs-keyword">THEN</span> row_count<br>                <span class="hljs-keyword">ELSE</span> <span class="hljs-number">0</span><br>            <span class="hljs-keyword">END</span><br>            ) <span class="hljs-keyword">AS</span> rowCounts<br>    <span class="hljs-keyword">FROM</span> sys.dm_db_partition_stats p <span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> sys.objects o<br>        <span class="hljs-keyword">ON</span> p.object_id <span class="hljs-operator">=</span> o.object_id<br>    <span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> o.name<br><br><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614160536391.png"
alt="sys.dm_db_partition_stats查询结果" />
<figcaption
aria-hidden="true">sys.dm_db_partition_stats查询结果</figcaption>
</figure></li>
</ol></li>
<li><p><code>DBCC SHOWCONTIG</code></p>
<ol type="1">
<li>统计某张表（或索引）用了多少页面、多少区，甚至页面上的平均数据量</li>
<li>而扫描的过程中，SQL
Server是要加锁的；要得到的结果越精确，扫描的范围就越大
<ol type="1">
<li>LIMITED模式运行最快，扫描的页数最少</li>
<li>SAMPLED模式将返回基于索引或堆中所有页的1％样本的统计信息</li>
<li>DETAILED模式将扫描所有页并返回所有统计信息</li>
</ol></li>
<li>最精确的方法，但是在数据库处于工作高峰时应避免使用</li>
<li><img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614160926210.png"
title="fig:" alt="DBCC SHOWCONTIG结果" /></li>
</ol></li>
</ol>
<h3 id="分析日志文件存储空间">分析日志文件存储空间</h3>
<p><code>DBCC SQLPERF(LOGSPACE)</code></p>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220614161059720.png"
alt="DBCC SQLPERF(LOGSPACE)结果" />
<figcaption aria-hidden="true">DBCC SQLPERF(LOGSPACE)结果</figcaption>
</figure>
<ol type="1">
<li>结果返回所有数据库大小，使用比率</li>
<li>对性能没有影响</li>
<li>结果总是准确</li>
<li>可随时运行</li>
</ol>
<h2 id="tempdb的空间使用">TEMPDB的空间使用</h2>
<p>Tempdb系统数据库是一个全局资源，主要用于保存：</p>
<h3 id="用户对象">用户对象</h3>
<ol type="1">
<li><p>由用户显式创建</p></li>
<li><p>可位于用户会话的作用域中；可位于创建对象所用例程的作用域中</p></li>
<li><p>例程可以是存储过程、触发器或用户定义函数</p></li>
<li><p>包括：</p>
<ol type="1">
<li>用户定义的表和索引</li>
<li>系统表和索引</li>
<li>全局临时表和索引</li>
<li>局部临时表和索引</li>
<li>table变量</li>
<li>表值函数中返回的表</li>
</ol></li>
</ol>
<h3 id="内部对象">内部对象</h3>
<ol type="1">
<li>SQL Server数据库引擎创建，用于处理SQL Server语句</li>
<li>可以在语句的作用域中创建和删除</li>
<li>每个内部对象至少使用9页：一个IAM页，一个8页的区</li>
<li>包括：
<ol type="1">
<li>用于游标或假脱机操作以及临时大型对象（LOB）存储的工作表</li>
<li>用于哈希联接或哈希聚合操作的工作文件</li>
<li>用于创建或重新生成索引等操作（如果指定了SORT_IN_TEMPDB）的中间排序结果，或者某些GROUP
BY、ORDER BY或UNION查询的中间排序结果</li>
</ol></li>
</ol>
<h3 id="版本存储区">版本存储区</h3>
<ol type="1">
<li>数据页的集合，包含支持使用行版本控制的功能所需的数据行</li>
<li>主要用来支持快照（Snapshot）事务隔离级别</li>
<li>主要有两个版本存储区：公用版本存储区和联机索引生成版本存储区</li>
</ol>
<h3 id="tempdb空间使用跟踪">Tempdb空间使用跟踪</h3>
<p>使用管理视图<code>sys.dm_db_file_space_usage</code>，包含的字段有：</p>
<table>

<thead>
<tr class="header">
<th>列　　名</th>
<th>数据类型</th>
<th>说　　明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>database_id</td>
<td>smallint</td>
<td>数据库ID</td>
</tr>
<tr class="even">
<td>file_id</td>
<td>smallint</td>
<td>文件ID。 file_id映射到sys.dm_io_virtual_file_
stats中的file_id，并映射到sys.sysfiles中的fileid</td>
</tr>
<tr class="odd">
<td>unallocated_extent_ page_count</td>
<td>Bigint</td>
<td>文件的未分配区中的总页数。 不包括已分配区中的未使用页</td>
</tr>
<tr class="even">
<td>version_store_ reserved_page_count</td>
<td>Bigint</td>
<td>为版本存储分配的统一区中的总页数</td>
</tr>
<tr class="odd">
<td>user_object_reserved_ page_count</td>
<td>bigint</td>
<td>从统一区为数据库中的用户对象分配的总页数。计数中包括已分配区中未使用的页。
可使用sys.allocation_units目录视图中的total_pages列来返回用户对象中每个分配单元的保留页计数</td>
</tr>
<tr class="even">
<td>internal_object_ reserved_page_count</td>
<td>bigint</td>
<td>从统一区为文件中的内部对象分配的总页数。计数中包括已分配区中未使用的页。
不存在可返回每个内部对象的页计数的目录视图或动态管理对象</td>
</tr>
<tr class="odd">
<td>mixed_extent_page_ count</td>
<td>bigint</td>
<td>文件的已分配混合区中的已分配和未分配总页数。混合区包含分配给不同对象的页。此计数包含文件中的所有IAM页</td>
</tr>
</tbody>
</table>
<p>如何设置tempdb初始大小：</p>
<ol type="1">
<li>基于生产环境进行测试
<ol type="1">
<li>设置tempdb的自动增长</li>
<li>模拟各个单独的查询或工作任务，同时监视tempdb空间使用</li>
<li>模拟执行一些系统维护操作，例如，重新生成索引，同时监视tempdb空间</li>
<li>使用前面2和3步中tempdb空间使用值来预测总的工作负荷下，会使用多少空间；并针对计划的并发度调整此值</li>
<li>根据第4步得到的值，设置tempdb在生产环境下的初始大小。同时也开启自动增长</li>
</ol></li>
</ol>
<h3
id="案例通过脚本监视tempdb空间使用">案例：通过脚本监视tempdb空间使用</h3>
<p>以一定的间隔时间运行能够监视系统运行状况的DBCC命令、查询管理视图（DMV）以及管理函数（DMF）等，把结果输出到一个文件里。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 被监控的query<br><span class="hljs-keyword">select</span> @<span class="hljs-variable">@spid</span><br>go<br>use AdventureWorks2019<br>go<br><span class="hljs-keyword">select</span> getdate()<br>go<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">into</span> #mySalesOrderDetail<br><span class="hljs-keyword">from</span> Sales.SalesOrderDetail<br><span class="hljs-comment">-- 创建一个临时表</span><br><span class="hljs-comment">-- 这个操作应该会申请用户对象页面</span><br>go<br>waitfor delay <span class="hljs-string">&#x27;0:0:2&#x27;</span><br><span class="hljs-keyword">select</span> getdate()<br>go<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> #mySalesOrderDetail<br><span class="hljs-comment">-- 删除一个临时表</span><br><span class="hljs-comment">-- 这个操作后用户对象页面数量应该会下降</span><br>go<br>waitfor delay <span class="hljs-string">&#x27;0:0:2&#x27;</span><br><span class="hljs-keyword">select</span> getdate()<br>go<br><span class="hljs-keyword">select</span> top <span class="hljs-number">100000</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span><br>[Sales].[SalesOrderDetail]<br><span class="hljs-keyword">INNER</span> <span class="hljs-keyword">JOIN</span> [Sales].[SalesOrderHeader] <br><span class="hljs-keyword">ON</span> [Sales].[SalesOrderHeader] .[SalesOrderID] <span class="hljs-operator">=</span> [Sales].[SalesOrderHeader].[SalesOrderID];<br><span class="hljs-comment">-- 这里做了一个比较大的联接 </span><br><span class="hljs-comment">-- 应该会有系统对象的申请.</span><br>go<br><span class="hljs-keyword">select</span> getdate()<br><span class="hljs-comment">-- join 语句做完以后系统对象页面数目应该下降</span><br>go<br><br></code></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 监视脚本<br># 先运行此脚本，选择<span class="hljs-keyword">Result</span> <span class="hljs-keyword">to</span> File，然后运行被测试query，被测试运行结束后，停止监视脚本<br>use tempdb<br><span class="hljs-comment">-- 每隔1秒钟运行一次，直到用户手工终止脚本运行</span><br>while <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">select</span> getdate()<br><span class="hljs-comment">-- 从文件级看tempdb使用情况</span><br>dbcc showfilestats<br><span class="hljs-comment">-- Query 1</span><br><span class="hljs-comment">-- 返回所有做过空间申请的会话信息</span><br><span class="hljs-keyword">Select</span> <span class="hljs-string">&#x27;Tempdb&#x27;</span> <span class="hljs-keyword">as</span> DB, getdate() <span class="hljs-keyword">as</span> <span class="hljs-type">Time</span>,<br>    <span class="hljs-built_in">SUM</span> (user_object_reserved_page_count)<span class="hljs-operator">*</span><span class="hljs-number">8</span> <span class="hljs-keyword">as</span> user_objects_kb,          <br>    <span class="hljs-built_in">SUM</span> (internal_object_reserved_page_count)<span class="hljs-operator">*</span><span class="hljs-number">8</span> <span class="hljs-keyword">as</span> internal_objects_kb,  <br>    <span class="hljs-built_in">SUM</span> (version_store_reserved_page_count)<span class="hljs-operator">*</span><span class="hljs-number">8</span>  <span class="hljs-keyword">as</span> version_store_kb,      <br>    <span class="hljs-built_in">SUM</span> (unallocated_extent_page_count)<span class="hljs-operator">*</span><span class="hljs-number">8</span> <span class="hljs-keyword">as</span> freespace_kb                <br><span class="hljs-keyword">From</span> sys.dm_db_file_space_usage<br><span class="hljs-keyword">Where</span> database_id <span class="hljs-operator">=</span> <span class="hljs-number">2</span><br><span class="hljs-comment">-- Query 2</span><br><span class="hljs-comment">-- 这个管理视图能够反映当时tempdb空间的总体分配</span><br><span class="hljs-keyword">SELECT</span> t1.session_id,<br>t1.internal_objects_alloc_page_count,  t1.user_objects_alloc_page_count,<br>t1.internal_objects_dealloc_page_count , t1.user_objects_dealloc_page_count,<br>t3.<span class="hljs-operator">*</span><br><span class="hljs-keyword">from</span> sys.dm_db_session_space_usage <span class="hljs-keyword">as</span>  t1 ,<br><span class="hljs-comment">-- 反映每个会话累计空间申请</span><br>sys.dm_exec_sessions <span class="hljs-keyword">as</span> t3<br><span class="hljs-comment">-- 每个会话的信息</span><br><span class="hljs-keyword">where</span><br>t1.session_id <span class="hljs-operator">=</span> t3.session_id<br><span class="hljs-keyword">and</span> (t1.internal_objects_alloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">or</span> t1.user_objects_alloc_page_count <span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">or</span> t1.internal_objects_dealloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">or</span> t1.user_objects_dealloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>)<br><span class="hljs-comment">-- Query 3</span><br><span class="hljs-comment">-- 返回正在运行并且做过空间申请的会话正在运行的语句</span><br><span class="hljs-keyword">SELECT</span> t1.session_id,<br>st.text<br><span class="hljs-keyword">from</span> sys.dm_db_session_space_usage <span class="hljs-keyword">as</span> t1,<br>sys.dm_exec_requests <span class="hljs-keyword">as</span> t4<br><span class="hljs-keyword">CROSS</span> APPLY sys.dm_exec_sql_text(t4.sql_handle) <span class="hljs-keyword">AS</span> st<br> <span class="hljs-keyword">where</span>  t1.session_id <span class="hljs-operator">=</span> t4.session_id <br>   <span class="hljs-keyword">and</span> t1.session_id <span class="hljs-operator">&gt;</span><span class="hljs-number">50</span> <br><span class="hljs-keyword">and</span> (t1.internal_objects_alloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">or</span> t1.user_objects_alloc_page_count <span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br><span class="hljs-keyword">or</span> t1.internal_objects_dealloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> <br><span class="hljs-keyword">or</span> t1.user_objects_dealloc_page_count<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>)<br>waitfor delay <span class="hljs-string">&#x27;0:0:1&#x27;</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615093337598.png"
alt="测试脚本输出" />
<figcaption aria-hidden="true">测试脚本输出</figcaption>
</figure>
<h2 id="数据文件的收缩">数据文件的收缩</h2>
<h3 id="删除数据">删除数据</h3>
<p>DELETE命令并不能完全释放表格或索引的数据结构以及它们申请的页面</p>
<p>删除数据释放空间方法：</p>
<ol type="1">
<li>在表格上建立聚集索引</li>
<li>如果所有数据都不要了，要使用TRUNCATE TABLE而不是DELETE
<ol type="1">
<li>TRUNCATE TABLE释放数据页，不记录事务日志</li>
<li>TRUNCATE TABLE始终锁定表和页，而不是锁定各行</li>
<li>TRUNCATE TABLE不留下空页</li>
<li>TRUNCATE
TABLE删除表中的所有行，但表结构及其列、约束、索引等保持不变</li>
</ol></li>
<li>如果表格本身不要了，就直接DROP TABLE</li>
</ol>
<h3 id="收缩数据库">收缩数据库</h3>
<p>准备工作：</p>
<ol type="1">
<li>确认收缩量的大小不超过当前文件的空闲空间的大小，释放出相应空间</li>
<li>主数据文件（Primary
File）是不能被清空的。能被完全清空的只有辅助数据文件</li>
<li>如果要把一个文件组整个清空，要删除分配在这个文件组上的对象（表格或索引），或者把它们移到其他文件组上</li>
</ol>
<p><code>DBCC SHRINKDATABASE</code></p>
<ol type="1">
<li><p>收缩指定数据库中的所有数据文件和日志文件的大小，不能对每个文件指定操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">DBCC SHRINKDATABASE   <br>( database_name <span class="hljs-operator">|</span> database_id <span class="hljs-operator">|</span> <span class="hljs-number">0</span>   <br>     [ , target_percent ]   <br>     [ , &#123; NOTRUNCATE <span class="hljs-operator">|</span> TRUNCATEONLY &#125; ]   <br>)  <br>[ <span class="hljs-keyword">WITH</span> <br>    NO_INFOMSGS ,<br>    &#123;     <br>         [ WAIT_AT_LOW_PRIORITY <br>            [ ( <br>                  <span class="hljs-operator">&lt;</span>wait_at_low_priority_option_list<span class="hljs-operator">&gt;</span><br>             )] <br>         ] <br>    &#125;<br>]<br>       <br><span class="hljs-operator">&lt;</span> wait_at_low_priority_option <span class="hljs-operator">&gt;</span> ::<span class="hljs-operator">=</span> <br> ABORT_AFTER_WAIT <span class="hljs-operator">=</span> &#123; SELF <span class="hljs-operator">|</span> BLOCKERS &#125;<br></code></pre></td></tr></table></figure></li>
</ol>
<p><code>DBCC SHRINKFILE</code></p>
<ol type="1">
<li><p>收缩当前数据库指定数据文件或日志文件的大小</p></li>
<li><p>本质是把使用过的区前移，将没有在使用的区从文件中移除以达到减小文件大小的效果。当很多空页面分布在各个区，导致没有很多空的区的时候，收缩效果会不好。</p></li>
<li><p>运行时会扫描数据文件并对正在读的页面加锁，对性能有一定影响；运行时其他用户可以对数据库进行读写操作</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">DBCC SHRINKFILE   <br>(  <br>    &#123; file_name <span class="hljs-operator">|</span> file_id &#125;   <br>    &#123; [ , EMPTYFILE ]   <br>    <span class="hljs-operator">|</span> [ [ , target_size ] [ , &#123; NOTRUNCATE <span class="hljs-operator">|</span> TRUNCATEONLY &#125; ] ]  <br>    &#125;  <br>)  <br>[ <span class="hljs-keyword">WITH</span> <br>    NO_INFOMSGS ,<br>    &#123;     <br>         [ WAIT_AT_LOW_PRIORITY <br>            [ ( <br>                  <span class="hljs-operator">&lt;</span>wait_at_low_priority_option_list<span class="hljs-operator">&gt;</span><br>             )] <br>         ] <br>]<br>       <br><span class="hljs-operator">&lt;</span> wait_at_low_priority_option <span class="hljs-operator">&gt;</span> ::<span class="hljs-operator">=</span> <br> ABORT_AFTER_WAIT <span class="hljs-operator">=</span> &#123; SELF <span class="hljs-operator">|</span> BLOCKERS &#125;<br></code></pre></td></tr></table></figure></li>
</ol>
<h3 id="案例收缩数据库">案例：收缩数据库</h3>
<p>创建数据库，并创建一个每一行都会占用一个页面的表格，由于表格上没有聚集索引，表格以堆存储。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> database test_shrink<br>go<br>use test_shrink<br>go<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> show_extent<br>(a <span class="hljs-type">int</span>,<br>b nvarchar(<span class="hljs-number">3900</span>))<br>go<br><span class="hljs-keyword">declare</span> <span class="hljs-variable">@i</span> <span class="hljs-type">int</span><br><span class="hljs-keyword">set</span> <span class="hljs-variable">@i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br>while <span class="hljs-variable">@i</span> <span class="hljs-operator">&lt;=</span><span class="hljs-number">1000</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">1</span>, REPLICATE ( N<span class="hljs-string">&#x27;a&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">2</span>, REPLICATE ( N<span class="hljs-string">&#x27;b&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">3</span>, REPLICATE ( N<span class="hljs-string">&#x27;c&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">4</span>, REPLICATE ( N<span class="hljs-string">&#x27;d&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">5</span>, REPLICATE ( N<span class="hljs-string">&#x27;e&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">6</span>, REPLICATE ( N<span class="hljs-string">&#x27;f&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">7</span>, REPLICATE ( N<span class="hljs-string">&#x27;g&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> show_extent <span class="hljs-keyword">values</span> (<span class="hljs-number">8</span>, REPLICATE ( N<span class="hljs-string">&#x27;h&#x27;</span> ,<span class="hljs-number">3900</span> ))<br><span class="hljs-keyword">set</span> <span class="hljs-variable">@i</span> <span class="hljs-operator">=</span> <span class="hljs-variable">@i</span> <span class="hljs-operator">+</span><span class="hljs-number">1</span><br><span class="hljs-keyword">end</span><br>dbcc showcontig(<span class="hljs-string">&#x27;show_extent&#x27;</span>)<br>go<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615101858653.png"
alt="DBCC SHOWCONTIG结果" />
<figcaption aria-hidden="true">DBCC SHOWCONTIG结果</figcaption>
</figure>
<p>可以看到占用了8000页</p>
<p>删除每个区里面的7个页面，只保留a=5的这些记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">delete</span> show_extent <span class="hljs-keyword">where</span> a <span class="hljs-operator">&lt;&gt;</span><span class="hljs-number">5</span><br>go<br>sp_spaceused show_extent<br>go<br>dbcc showcontig(<span class="hljs-string">&#x27;show_extent&#x27;</span>)<br>go<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615132811184.png"
alt="sp_spaceused结果" />
<figcaption aria-hidden="true">sp_spaceused结果</figcaption>
</figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615132828368.png"
alt="dbcc showcontig结果" />
<figcaption aria-hidden="true">dbcc showcontig结果</figcaption>
</figure>
<p>可以发现，这里<code>Pages Scanned</code>说一半以上的pages还在使用，<code>Scan Density</code>
说明区里页的占用率不高，松散，<code>Extents Scanned</code>说明所有区都还在被使用。</p>
<p>这个时候如果进行收缩</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">dbcc shrinkfile (<span class="hljs-number">1</span>, <span class="hljs-number">40</span>)<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615133740691.png"
alt="收缩后结果" />
<figcaption aria-hidden="true">收缩后结果</figcaption>
</figure>
<p>会发现是没有什么效果的。</p>
<p>如果重建索引，把页面重新排列一次</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> clustered index show_I <br><span class="hljs-keyword">on</span> show_extent (a)<br>go<br>dbcc showcontig(<span class="hljs-string">&#x27;show_extent&#x27;</span>)<br>go<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615134144834.png"
alt="重建索引后dbcc showcontig结果" />
<figcaption aria-hidden="true">重建索引后dbcc
showcontig结果</figcaption>
</figure>
<p>可以发现，重建索引后，由于之前以堆存放的页面以B数重新排列，被占用的页面释放出来，被占用的区也释放出来。密度也增加了。这个时候再去收缩就有效果了。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">dbcc shrinkfile (<span class="hljs-number">1</span>, <span class="hljs-number">40</span>)<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615134518079.png"
alt="重建索引后收缩结果" />
<figcaption aria-hidden="true">重建索引后收缩结果</figcaption>
</figure>
<p>如果不想建聚集索引，可能只有把这张表的数据先移走，然后清空表格，再把数据插回来</p>
<p>对于区中存放text或者image等数据（SQL
Server使用单独页面存放），重建索引不会影响到这些数据，应该怎么解决呢？</p>
<p>使用<code>DBCC EXTENTINFO</code>打出数据文件里的所有区的分配信息，然后计算每个对象理论上区的数目和实际的数目。如果实际数目远大于理论的数目，那这个对象就是碎片过多，考虑重建对象。</p>
<h2 id="日志文件不停地增长">日志文件不停地增长</h2>
<h3 id="sql-server需要的日志记录">SQL Server需要的日志记录</h3>
<ol type="1">
<li>所有没有经过“检查点”的日志记录，经过检查点后会保证所有的“脏页”都被写入硬盘
<ol type="1">
<li>对于不需要的日志记录，在每个检查点会进行截断，把这些记录占用的空间标志成可重用</li>
<li>做检查点的频率取决于服务器属性“Recovery Interval”</li>
</ol></li>
<li>所有没有提交的事务所产生的日志记录，以及在它们之后的所有日志记录。
<ol type="1">
<li>因为一个没有提交的事务可以在任何时候回滚，需要标记所有从这个事务开始的日志记录</li>
</ol></li>
<li>所有要做备份的日志记录</li>
<li>有其他需要读取日志的数据库功能模块
<ol type="1">
<li>事务型复制（Transactional Replication）</li>
<li>和数据库镜像（Database Mirroring）</li>
</ol></li>
</ol>
<h3 id="日志文件不停地增长通常原因">日志文件不停地增长通常原因</h3>
<ol type="1">
<li>数据库恢复模式不是简单模式，但是没有安排日志备份导致没有截断，无法释放空间</li>
<li>数据库上面有一个很长时间都没有提交的事务，导致一直记录日志</li>
<li>数据库上有一个很大的事务正在运行</li>
<li>数据库复制或者镜像出了异常</li>
</ol>
<h3 id="案例日志增长原因定位">案例：日志增长原因定位</h3>
<ol type="1">
<li><p>检查日志现在使用情况和数据库状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 检查当前日志的使用百分比、数据库恢复模式和日志重用等待状态<br>DBCC SQLPERF(LOGSPACE)<br>GO<br># 反映<span class="hljs-keyword">SQL</span> Server认为的，不能截断日志的原因<br><span class="hljs-keyword">SELECT</span> name, recovery_model_desc, log_reuse_wait,log_reuse_wait_desc <br>    <span class="hljs-keyword">FROM</span> sys.databases<br>GO<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615144944222.png"
alt="检查数据库日志不能TRUNCATE的直接原因" />
<figcaption
aria-hidden="true">检查数据库日志不能TRUNCATE的直接原因</figcaption>
</figure>
<table>

<thead>
<tr class="header">
<th>1.</th>
<th>log_reuse_wait值</th>
<th>log_reuse_wait_desc值</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>0</td>
<td>NOTHING</td>
<td>当前有一个或多个可重用的虚拟日志文件</td>
</tr>
<tr class="even">
<td>1</td>
<td>CHECKPOINT</td>
<td>自上次日志截断之后，尚未出现检查点，或者日志头部尚未跨一个虚拟日志文件移动范围（所有恢复模式）</td>
</tr>
<tr class="odd">
<td>2</td>
<td>LOG_BACKUP</td>
<td>SQL
Server在等待着日志备份。要求日志备份将日志标头前移（仅适用于完整恢复模式或大容量日志恢复模式）。
日志备份完成后，日志标头将前移，并且一些日志空间可能会变为可重新使用</td>
</tr>
<tr class="even">
<td>3</td>
<td>ACTIVE_BACKUP_OR_ RESTORE</td>
<td>数据备份或还原正在进行（所有恢复模式）。
数据备份与活动事务的工作原理相同；数据备份运行时，将阻止截断</td>
</tr>
<tr class="odd">
<td>4</td>
<td>ACTIVE_TRANSACTION</td>
<td>事务处于活动状态（所有恢复模式）。 
有一个用户开启了一个长时间运行的事务。在这种情况下，可能需要那个用户将事务提交或者回滚以后，才能释放空间。
 事务被延迟（仅适用于 SQL Server 2005 Enterprise Edition
及更高版本）。“延迟的事务”是有效的活动事务，因为某些资源不可用，其回滚受阻。</td>
</tr>
<tr class="even">
<td>5</td>
<td>DATABASE_MIRRORING</td>
<td>数据库镜像暂停，或者在高性能模式下，镜像数据库明显滞后于主体数据库（仅限于完整恢复模式）</td>
</tr>
<tr class="odd">
<td>6</td>
<td>REPLICATION</td>
<td>在事务复制过程中，与发布相关的事务仍未传递到分发数据库（仅限于完整恢复模式）</td>
</tr>
<tr class="even">
<td>7</td>
<td>DATABASE_SNAPSHOT_ CREATION</td>
<td>正在创建数据库快照（所有恢复模式）</td>
</tr>
<tr class="odd">
<td>8</td>
<td>LOG_SCAN</td>
<td>正在进行日志扫描（所有恢复模式）</td>
</tr>
<tr class="even">
<td>9</td>
<td>OTHER_TRANSIENT</td>
<td>此值当前未使用</td>
</tr>
</tbody>
</table></li>
<li><p>检查最老的活动事务</p>
<ol type="1">
<li><p>如果日志的大部分都在使用中，而且日志重用等待状态是ACTIVE_TRANSACTION，需要检查最久未提交的事务是谁申请的</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 返回的是当前数据库最久未被提交的事务<br>DBCC OPENTRAN<br>GO<br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615150013988.png"
alt="最久未被提交的事务结果" />
<figcaption aria-hidden="true">最久未被提交的事务结果</figcaption>
</figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 查看来连接建立情况<br><span class="hljs-keyword">SELECT</span> st.text,t2.<span class="hljs-operator">*</span>                                                         <br>    <span class="hljs-keyword">FROM</span> sys.dm_exec_sessions <span class="hljs-keyword">AS</span> t2, sys.dm_exec_connections <span class="hljs-keyword">AS</span> t1<br>        <span class="hljs-keyword">CROSS</span> APPLY sys.dm_exec_sql_text(t1.most_recent_sql_handle) <span class="hljs-keyword">AS</span> st <br>    <span class="hljs-keyword">WHERE</span> t1.session_id <span class="hljs-operator">=</span> t2.session_id<br>        <span class="hljs-keyword">AND</span> t1.session_id <span class="hljs-operator">&gt;</span><span class="hljs-number">50</span>   <br></code></pre></td></tr></table></figure>
<figure>
<img
src="/2022/06/15/SQL%20Server%202012%20%E5%AE%9E%E6%96%BD%E4%B8%8E%E7%AE%A1%E7%90%86%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97Note%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A9%BA%E9%97%B4%E7%AE%A1%E7%90%86/image-20220615150143255.png"
alt="连接建立情况" />
<figcaption aria-hidden="true">连接建立情况</figcaption>
</figure>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"># 尝试关闭连接<br># 如果一个连接正处于提交或者回滚的过程中，<span class="hljs-keyword">SQL</span> Server会尊重它的执行而不去强行终止它<br>      KILL <span class="hljs-number">52</span><br></code></pre></td></tr></table></figure></li>
</ol></li>
</ol>
<h2 id="文件自动增长和自动收缩">文件自动增长和自动收缩</h2>
<h3
id="数据文件和日志文件空间申请特点">数据文件和日志文件空间申请特点</h3>
<p>数据文件</p>
<ol type="1">
<li>按所有文件空闲空间大小的比例分配
<ol type="1">
<li>假设3个文件空闲空间是200：100：100，40 MB的数据就按照20 MB:10 MB:10
MB的比例写入了这3个文件</li>
</ol></li>
<li>加入多个数据文件
<ol type="1">
<li>必须保证同一个文件组里的所有数据文件都有基本一样大小的空闲空间以达到分散I/O负载的目的</li>
</ol></li>
<li>如果文件全部写满
<ol type="1">
<li>会选取其中一个文件（可能是任意一个）做自动增长，所有后面的数据都写入这个做了自动增长的文件里，直到这个文件再次写满，SQL
Server要做下一次自动增长为止</li>
<li>很难达到I/O负载平衡的效果</li>
</ol></li>
</ol>
<p>日志文件：</p>
<ol type="1">
<li>按照严格的顺序写入
<ol type="1">
<li>在一个时间点只写其中的一个文件。只有这个文件写满了，SQL
Server才会写入另外一个</li>
</ol></li>
<li>加入多个日志文件对性能基本不会有什么帮助</li>
<li>如果文件全部写满
<ol type="1">
<li>SQL Server自动增长当前的日志文件，以保证日志记录的连续性</li>
</ol></li>
</ol>
<h3 id="数据库自增长设置">数据库自增长设置</h3>
<ol type="1">
<li>当某个操作触发了文件自动增长时，SQL
Server会让那个操作等待。直到文件自动增长结束了，原先的那个操作才能继续进行</li>
<li>要设置成按固定大小增长以避免一次增长太多或者太少</li>
<li>要定期监测各个数据文件的使用情况，尽量保证每个文件剩余的空间一样大，或者是期望的比例。</li>
<li>设置文件最大值</li>
<li>发生自增长后，要及时检查新的数据文件空间分配情况</li>
</ol>
<h3 id="数据库自动收缩">数据库自动收缩</h3>
<ol type="1">
<li>不推荐</li>
<li>治标不治本
<ol type="1">
<li>收缩后还是会增长</li>
</ol></li>
<li>数据文件收缩会给文件带来更多的碎片</li>
<li>对性能有不小影响</li>
</ol>
]]></content>
      <tags>
        <tag>SQL Server</tag>
        <tag>Note</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL Server Backup</title>
    <url>/2022/06/06/SQL%20Server%20Backup/</url>
    <content><![CDATA[<h1 id="sql-server-backup">SQL Server Backup</h1>
<p><strong>Full Backup</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">backup database AdventureWorks2019 <span class="hljs-keyword">to</span> disk <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;C:\Windows\AdventureWorks2019_20220602.bak&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p>If get an error like this:</p>
<figure>
<img src="/2022/06/06/SQL%20Server%20Backup/image-20220606100125253.png"
alt="image-20220606100125253" />
<figcaption aria-hidden="true">image-20220606100125253</figcaption>
</figure>
<p>It means that the SQL server has no permission to the location. To
fix this, in the <strong>SQL Server Configuration Manager</strong>, we
can find that the SQL service is logged on as
<code>NT Service\MSSQLSERVER</code>.</p>
<figure>
<img src="/2022/06/06/SQL%20Server%20Backup/image-20220606100346465.png"
alt="image-20220606100346465" />
<figcaption aria-hidden="true">image-20220606100346465</figcaption>
</figure>
<p>Then right-click on the folder you want to access, <strong>properties
--&gt; security</strong>, and add permission to the
<code>NT Service\MSSQLSERVER</code>.</p>
<figure>
<img src="/2022/06/06/SQL%20Server%20Backup/image-20220606100858530.png"
alt="image-20220606100858530" />
<figcaption aria-hidden="true">image-20220606100858530</figcaption>
</figure>
<p><strong>Backup with differential</strong></p>
<p>This will back up the changed pages from the previous full
backup.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- backup changes start from last full backup, save changed page only</span><br>backup database AdventureWorks2019 <span class="hljs-keyword">to</span> disk <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;C:\Users\t-jxie\Downloads\AdventureWorks2019_20220602_2.bak&#x27;</span> <span class="hljs-keyword">with</span> differential;<br></code></pre></td></tr></table></figure>
<p><strong>Backup with copy_only</strong></p>
<p>This will leave the DCM (diff change map) unchanged, meaning that if
we are back up with differential, it will also backup changes from the
last full backup.</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- backup, leave (DCM) diff change map unchanged, compressed</span><br>backup database AdventureWorks2019 <span class="hljs-keyword">to</span> disk <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;C:\Users\t-jxie\Downloads\AdventureWorks2019_20220602_2.bak&#x27;</span> <span class="hljs-keyword">with</span> copy_only, compression;<br></code></pre></td></tr></table></figure>
<p>The DCM records the changes made to the page of the database, we can
view the DCM of the specific database by</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">dbcc page(<span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure>
<figure>
<img src="/2022/06/06/SQL%20Server%20Backup/image-20220606101710464.png"
alt="image-20220606101710464" />
<figcaption aria-hidden="true">image-20220606101710464</figcaption>
</figure>
<p><strong>Backup log files</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">backup log AdventureWorks2019 <span class="hljs-keyword">to</span> disk <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;C:\Users\t-jxie\Downloads\AdventureWorks2019_20220602.trn&#x27;</span>;<br></code></pre></td></tr></table></figure>
<p>We can view the information of log files of databases by</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">dbcc sqlperf(logspace)<br></code></pre></td></tr></table></figure>
<figure>
<img src="/2022/06/06/SQL%20Server%20Backup/image-20220606101859208.png"
alt="image-20220606101859208" />
<figcaption aria-hidden="true">image-20220606101859208</figcaption>
</figure>
]]></content>
      <tags>
        <tag>SQL Server</tag>
        <tag>T-SQL</tag>
      </tags>
  </entry>
</search>
